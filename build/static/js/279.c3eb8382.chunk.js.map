{"version":3,"file":"static/js/279.c3eb8382.chunk.js","mappings":"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","sources":["Pages/users/attendance.js","helper/util.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAll } from \"../../store/user/attendance\";\r\nimport \"./attendance.css\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport Pagination from \"react-bootstrap/Pagination\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport TitleCase from \"../../helper/title-case\";\r\nimport LocalTimeZone, { LocaDateFormate } from \"../../helper/time-set-localtimezone\";\r\nimport CalculationLate, { CalculateEarlyLeave } from \"../../helper/util\";\r\n\r\nfunction Attendance(props) {\r\n  const dispatch = useDispatch();\r\n  const jwt = props.jwt;\r\n\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const data = useSelector((status) => status.userAttendance);\r\n  useEffect(() => {\r\n    dispatch(getAll({ jwt, month: `${startDate.getFullYear()}-${startDate.getMonth()+1}` }));\r\n  }, [dispatch, jwt, startDate]);\r\n  //...... filter ......//\r\n  const resetFilter = () => {\r\n    dispatch(getAll({ jwt }));\r\n    setStartDate();\r\n  };\r\n  const dateChange = (date1) => {\r\n    setStartDate(date1);\r\n    const date = new Date(date1);\r\n    let month = date.getMonth() + 1;\r\n    let year = date.getFullYear();\r\n    if (year === 1970) return dispatch(getAll({ jwt }));\r\n    dispatch(getAll({ jwt, month: `${year}-${month}` }));\r\n  };\r\n  //......pagination.......//\r\n  let items = [];\r\n  for (let number = 1; number <= data.totalpages; number++) {\r\n    items.push(\r\n      <Pagination.Item\r\n        key={number}\r\n        active={number === data.currentpage}\r\n        onClick={() => handelPagination(number)}\r\n      >\r\n        {number}\r\n      </Pagination.Item>\r\n    );\r\n  }\r\n  const handelPagination = (number) => {\r\n    dispatch(getAll({ jwt, pageno: number }));\r\n  };\r\n  return (\r\n    <div className=\"page-section p-4\">\r\n      <div className=\"employees chart\">\r\n        <h4 className=\"mb-0\">Monthly Attendace Report</h4>\r\n        <div className=\"row align-items-center justify-content-between my-4\">\r\n          <div className=\"col-lg-3 col-12\">\r\n            <div className=\"d-flex align-items-center\">\r\n              <DatePicker\r\n                selected={startDate}\r\n                onChange={(date) => dateChange(date)}\r\n                dateFormat=\"MM/yyyy\"\r\n                showMonthYearPicker\r\n                placeholderText=\"All Days\"\r\n              />\r\n              <Button onClick={resetFilter}>Reset</Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"responsive mt-4\">\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr key='heading'>\r\n                <th className=\"text-white\">S.No.</th>\r\n                <th className=\"text-white\">Date</th>\r\n                <th className=\"text-white\">Shift</th>\r\n                <th className=\"text-white\">Check&#10240;IN</th>\r\n                <th className=\"text-white\">Check&#10240;OUT</th>\r\n                <th className=\"text-white\">Late</th>\r\n                <th className=\"text-white\">Early Leaving</th>\r\n                <th className=\"text-white\">Effective&#10240;Work</th>\r\n                <th className=\"text-white\">Total&#10240;Work</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.isLoading ? (\r\n                <tr key={`o-loading`} className=\"text-center\">\r\n                  <td colSpan={8}>Loading...</td>\r\n                </tr>\r\n              ) : data.allData.length > 0 ? (\r\n                data.allData.map((result, index) => {\r\n                  return(<>              \r\n                  { result.status===\"present\" && \r\n                      <tr key={`present-${index}`}>\r\n                          <td>{(index + 1)}</td>\r\n                          <td><LocaDateFormate date_arg = {result.created_at}/></td>\r\n                          <td>\r\n                            <TitleCase\r\n                              text={result.timeSlot ? result.timeSlot.shift : \"N/A\"}\r\n                            />\r\n                          </td>\r\n                          <td>\r\n                            <LocalTimeZone time = {result.inTime}/>\r\n                          </td>\r\n                          <td>\r\n                            { \r\n                                result.outTime? <LocalTimeZone time = {result.outTime}/>:\"--:--\"\r\n                            }\r\n                          </td>\r\n                          <td className=\"text-center\">\r\n                            <CalculationLate late = {result.late}/>\r\n                          </td>\r\n                          <td className=\"text-center\">\r\n                            <CalculateEarlyLeave checkOut = {result.outTime} outTime = {result.timeSlot.time_out}/>\r\n                          </td>\r\n                          <td>\r\n                            {result.effective_hours\r\n                              ? `${result.effective_hours}`\r\n                              : \"--:--\"}\r\n                          </td>\r\n                          <td>\r\n                            {result.duration\r\n                              ? `${result.duration}`\r\n                              : \"--:--\"}\r\n                          </td>\r\n                          </tr>\r\n                      }\r\n                      { result.status !== \"present\" && \r\n                          <tr key={`absent-${index}`} className={result.status===\"absent\"?\"table-danger\":result.status===\"leave\"?\"table-info\":\"table-warning\"}>\r\n                            <td>{(index + 1)}</td>\r\n                            <td><LocaDateFormate date_arg = {result.created_at}/></td>\r\n                            <td colSpan={7} className=\"text-center\" ><TitleCase text ={result.status}/></td>\r\n                          </tr>\r\n                      }\r\n                    </> )})\r\n              ) : (\r\n                <tr key={`0-nodata`}>\r\n                  <td colSpan={8} className=\"text-center\">\r\n                    No Data Found\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <Pagination>{items}</Pagination>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Attendance;\r\n","function CalculationLate( result ) {\r\n\r\n    return ( \r\n        result.late !== \"ONTIME\"\r\n          ? Number(result.late.slice(3,5))<=15 && Number(result.late.slice(0,2))<1?<span className=\"bg-warning text-white late-area\">{result.late}</span>:<span className=\"bg-danger text-white late-area\">{result.late}</span>\r\n          : <span className=\"bg-success text-white late-area\">On&#10240;Time</span>\r\n        );\r\n}\r\n\r\nfunction CalculateEarlyLeave(result){\r\n  const {outTime, checkOut} = result\r\n  const date = new Date(outTime)\r\n  const houre = parseInt(date.getHours().toString().padStart(2, '0'))\r\n  const min = parseInt(date.getMinutes().toString().padStart(2, '0'))\r\n\r\n  let data;\r\n  if(checkOut){\r\n    let date1 = new Date(checkOut)\r\n    let h = parseInt(date1.getHours().toString().padStart(2, '0'))\r\n    let m = parseInt(date1.getMinutes().toString().padStart(2, '0'))\r\n    if(houre===h){\r\n      if(min<=m){\r\n        data = <span className=\"bg-success text-white late-area\">On&#10240;Time</span>\r\n      }else{\r\n        data = <span className=\"bg-danger text-white late-area\">00:{(min-m).toString().padStart(2, '0')}</span>\r\n      }\r\n    }else{\r\n      //console.log(checkOut, outTime)\r\n      if(houre>h){\r\n        let diff_time = (houre*60+min)-(h*60+m)\r\n        data = <span className=\"bg-danger text-white late-area\">{(Math.floor(diff_time/60)).toString().padStart(2, '0')}:{(diff_time%60).toString().padStart(2, '0')}</span>\r\n      }else{\r\n        data = <span className=\"bg-success text-white late-area\">On&#10240;Time</span>\r\n      }\r\n\r\n    }\r\n  }\r\n  return data\r\n}\r\n\r\nexport {CalculateEarlyLeave}\r\nexport default CalculationLate;"],"names":["props","dispatch","useDispatch","jwt","_useState","useState","Date","_useState2","_slicedToArray","startDate","setStartDate","data","useSelector","status","userAttendance","useEffect","getAll","month","concat","getFullYear","getMonth","items","_loop","number","push","_jsx","Pagination","Item","active","currentpage","onClick","handelPagination","children","totalpages","pageno","className","_jsxs","DatePicker","selected","onChange","date","date1","year","dateChange","dateFormat","showMonthYearPicker","placeholderText","Button","Table","striped","bordered","hover","isLoading","colSpan","allData","length","map","result","index","_Fragment","LocaDateFormate","date_arg","created_at","TitleCase","text","timeSlot","shift","LocalTimeZone","time","inTime","outTime","CalculationLate","late","CalculateEarlyLeave","checkOut","time_out","effective_hours","duration","houre","parseInt","getHours","toString","padStart","min","getMinutes","h","m","diff_time","Math","floor","Number","slice"],"sourceRoot":""}