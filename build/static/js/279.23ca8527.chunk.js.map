{"version":3,"file":"static/js/279.23ca8527.chunk.js","mappings":"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","sources":["Pages/users/attendance.js","helper/util.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAll } from \"../../store/user/attendance\";\nimport \"./attendance.css\";\nimport { Table, Button } from \"react-bootstrap\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport TitleCase from \"../../helper/title-case\";\nimport LocalTimeZone, { LocaDateFormate } from \"../../helper/time-set-localtimezone\";\nimport CalculationLate, { CalculateEarlyLeave } from \"../../helper/util\";\n\nfunction Attendance(props) {\n  const dispatch = useDispatch();\n  const jwt = props.jwt;\n\n  const [startDate, setStartDate] = useState(new Date());\n  const data = useSelector((status) => status.userAttendance);\n  useEffect(() => {\n    dispatch(getAll({ jwt, month: `${startDate.getFullYear()}-${startDate.getMonth()+1}` }));\n  }, [dispatch, jwt, startDate]);\n  //...... filter ......//\n  const resetFilter = () => {\n    dispatch(getAll({ jwt }));\n    setStartDate();\n  };\n  const dateChange = (date1) => {\n    setStartDate(date1);\n    const date = new Date(date1);\n    let month = date.getMonth() + 1;\n    let year = date.getFullYear();\n    if (year === 1970) return dispatch(getAll({ jwt }));\n    dispatch(getAll({ jwt, month: `${year}-${month}` }));\n  };\n  //......pagination.......//\n  let items = [];\n  for (let number = 1; number <= data.totalpages; number++) {\n    items.push(\n      <Pagination.Item\n        key={number}\n        active={number === data.currentpage}\n        onClick={() => handelPagination(number)}\n      >\n        {number}\n      </Pagination.Item>\n    );\n  }\n  const handelPagination = (number) => {\n    dispatch(getAll({ jwt, pageno: number }));\n  };\n  return (\n    <div className=\"page-section p-4\">\n      <div className=\"employees chart\">\n        <h4 className=\"mb-0\">Monthly Attendace Report</h4>\n        <div className=\"row align-items-center justify-content-between my-4\">\n          <div className=\"col-lg-3 col-12\">\n            <div className=\"d-flex align-items-center\">\n              <DatePicker\n                selected={startDate}\n                onChange={(date) => dateChange(date)}\n                dateFormat=\"MM/yyyy\"\n                showMonthYearPicker\n                placeholderText=\"All Days\"\n              />\n              <Button onClick={resetFilter}>Reset</Button>\n            </div>\n          </div>\n        </div>\n        <div className=\"responsive mt-4\">\n          <Table striped bordered hover>\n            <thead>\n              <tr key='heading'>\n                <th className=\"text-white\">S.No.</th>\n                <th className=\"text-white\">Date</th>\n                <th className=\"text-white\">Shift</th>\n                <th className=\"text-white\">Check&#10240;IN</th>\n                <th className=\"text-white\">Check&#10240;OUT</th>\n                <th className=\"text-white\">Late</th>\n                <th className=\"text-white\">Early Leaving</th>\n                <th className=\"text-white\">Effective&#10240;Work</th>\n                <th className=\"text-white\">Total&#10240;Work</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.isLoading ? (\n                <tr key={`o-loading`} className=\"text-center\">\n                  <td colSpan={8}>Loading...</td>\n                </tr>\n              ) : data.allData.length > 0 ? (\n                data.allData.map((result, index) => {\n                  return(<>              \n                  { result.status===\"present\" && \n                      <tr key={`present-${index}`}>\n                          <td>{(index + 1)}</td>\n                          <td><LocaDateFormate date_arg = {result.created_at}/></td>\n                          <td>\n                            <TitleCase\n                              text={result.timeSlot ? result.timeSlot.shift : \"N/A\"}\n                            />\n                          </td>\n                          <td>\n                            <LocalTimeZone time = {result.inTime}/>\n                          </td>\n                          <td>\n                            { \n                                result.outTime? <LocalTimeZone time = {result.outTime}/>:\"--:--\"\n                            }\n                          </td>\n                          <td className=\"text-center\">\n                            <CalculationLate late = {result.late}/>\n                          </td>\n                          <td className=\"text-center\">\n                            <CalculateEarlyLeave checkOut = {result.outTime} outTime = {result.timeSlot.time_out}/>\n                          </td>\n                          <td>\n                            {result.effective_hours\n                              ? `${result.effective_hours}`\n                              : \"--:--\"}\n                          </td>\n                          <td>\n                            {result.duration\n                              ? `${result.duration}`\n                              : \"--:--\"}\n                          </td>\n                          </tr>\n                      }\n                      { result.status !== \"present\" && \n                          <tr key={`absent-${index}`} className={result.status===\"absent\"?\"table-danger\":result.status===\"leave\"?\"table-info\":\"table-warning\"}>\n                            <td>{(index + 1)}</td>\n                            <td><LocaDateFormate date_arg = {result.created_at}/></td>\n                            <td colSpan={7} className=\"text-center\" ><TitleCase text ={result.status}/></td>\n                          </tr>\n                      }\n                    </> )})\n              ) : (\n                <tr key={`0-nodata`}>\n                  <td colSpan={8} className=\"text-center\">\n                    No Data Found\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n        </div>\n        <Pagination>{items}</Pagination>\n      </div>\n    </div>\n  );\n}\n\nexport default Attendance;\n","function CalculationLate( result ) {\n\n    return ( \n        result.late !== \"ONTIME\"\n          ? Number(result.late.slice(3,5))<=15 && Number(result.late.slice(0,2))<1?<span className=\"bg-warning text-white late-area\">{result.late}</span>:<span className=\"bg-danger text-white late-area\">{result.late}</span>\n          : <span className=\"bg-success text-white late-area\">On&#10240;Time</span>\n        );\n}\n\nfunction CalculateEarlyLeave(result){\n  const {outTime, checkOut} = result\n  const date = new Date(outTime)\n  const houre = parseInt(date.getHours().toString().padStart(2, '0'))\n  const min = parseInt(date.getMinutes().toString().padStart(2, '0'))\n\n  let data;\n  if(checkOut){\n    let date1 = new Date(checkOut)\n    let h = parseInt(date1.getHours().toString().padStart(2, '0'))\n    let m = parseInt(date1.getMinutes().toString().padStart(2, '0'))\n    if(houre===h){\n      if(min<=m){\n        data = <span className=\"bg-success text-white late-area\">On&#10240;Time</span>\n      }else{\n        data = <span className=\"bg-danger text-white late-area\">00:{(min-m).toString().padStart(2, '0')}</span>\n      }\n    }else{\n      //console.log(checkOut, outTime)\n      if(houre>h){\n        let diff_time = (houre*60+min)-(h*60+m)\n        data = <span className=\"bg-danger text-white late-area\">{(Math.floor(diff_time/60)).toString().padStart(2, '0')}:{(diff_time%60).toString().padStart(2, '0')}</span>\n      }else{\n        data = <span className=\"bg-success text-white late-area\">On&#10240;Time</span>\n      }\n\n    }\n  }\n  return data\n}\n\nexport {CalculateEarlyLeave}\nexport default CalculationLate;"],"names":["props","dispatch","useDispatch","jwt","startDate","setStartDate","useState","Date","data","useSelector","status","userAttendance","useEffect","getAll","month","concat","getFullYear","getMonth","items","number","totalpages","push","_jsx","Pagination","Item","active","currentpage","onClick","handelPagination","children","pageno","className","_jsxs","DatePicker","selected","onChange","date","date1","year","dateChange","dateFormat","showMonthYearPicker","placeholderText","Button","resetFilter","Table","striped","bordered","hover","isLoading","colSpan","allData","length","map","result","index","_Fragment","LocaDateFormate","date_arg","created_at","TitleCase","text","timeSlot","shift","LocalTimeZone","time","inTime","outTime","CalculationLate","late","CalculateEarlyLeave","checkOut","time_out","effective_hours","duration","houre","parseInt","getHours","toString","padStart","min","getMinutes","h","m","diff_time","Math","floor","Number","slice"],"sourceRoot":""}