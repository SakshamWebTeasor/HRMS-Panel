{"version":3,"file":"static/js/51.754f1097.chunk.js","mappings":"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","sources":["Pages/admin/office-shift.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  addRecord,\r\n  getAll,\r\n  updateStatus,\r\n  getOne,\r\n  updateRecord,\r\n} from \"../../store/admin/timeSlot\";\r\nimport \"./designation.css\";\r\nimport { Spinner, Modal, Table, Button, Form } from \"react-bootstrap\";\r\nimport TitleCase from \"../../helper/title-case\";\r\nimport LocalTimeZone, { LocaDateFormate } from \"../../helper/time-set-localtimezone\";\r\n\r\nfunction OfficeShift(props) {\r\n  const dispatch = useDispatch();\r\n  const jwt = props.jwt;\r\n\r\n  const shiftRef = useRef();\r\n  const lunchTimetRef = useRef();\r\n  const startRef = useRef();\r\n  const endRef = useRef();\r\n  const editEndRef = useRef();\r\n  const editShiftRef = useRef();\r\n  const editStartRef = useRef();\r\n  const editLunchTimetRef = useRef();\r\n\r\n  const [show, setShow] = useState(false);\r\n  useEffect(() => {\r\n    dispatch(getAll({ jwt }));\r\n  }, [dispatch, jwt]);\r\n  const data = useSelector((status) => status.timeSlot);\r\n  //...submit....//\r\n  const handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    let start = new Date()\r\n    let x = (startRef.current.value).split(':')\r\n    start.setHours(parseInt(x[0]))\r\n    start.setMinutes(parseInt(x[1]))\r\n    start.setSeconds(0);\r\n    let end = new Date()\r\n    let y = (endRef.current.value).split(':')\r\n    end.setHours(parseInt(y[0]))\r\n    end.setMinutes(parseInt(y[1]))\r\n    end.setSeconds(0);\r\n\r\n    dispatch(\r\n      addRecord({\r\n        jwt,\r\n        shift: shiftRef.current.value,\r\n        startTime: start,\r\n        endTime: end,\r\n        lunchTime: lunchTimetRef.current.value,\r\n      })\r\n    );\r\n    // shiftRef.current.value = \"\";\r\n    // startRef.current.value = null;\r\n    // endRef.current.value = null;\r\n    // lunchTimetRef.current.value = null;\r\n  };\r\n  //... Update submit ...//\r\n  useEffect(() => {\r\n    if (!data.isError) {\r\n      setShow(false);\r\n      shiftRef.current.value = \"\";\r\n      startRef.current.value = null;\r\n      endRef.current.value = null;\r\n      lunchTimetRef.current.value = null;\r\n    }\r\n  }, [data.isError]);\r\n  const update = (e) => {\r\n    e.preventDefault();\r\n    let start = new Date()\r\n    let x = (editStartRef.current.value).split(':')\r\n    start.setHours(parseInt(x[0]))\r\n    start.setMinutes(parseInt(x[1]))\r\n    start.setSeconds(0);\r\n    let end = new Date()\r\n    let y = (editEndRef.current.value).split(':')\r\n    end.setHours(parseInt(y[0]))\r\n    end.setMinutes(parseInt(y[1]))\r\n    end.setSeconds(0);\r\n\r\n    console.log(start, end)\r\n    dispatch(\r\n      updateRecord({\r\n        jwt,\r\n        id: data.singledata[0]._id,\r\n        shift: editShiftRef.current.value,\r\n        startTime: start,\r\n        endTime: end,\r\n        lunchTime: editLunchTimetRef.current.value,\r\n      })\r\n    );\r\n  };\r\n  //edite...//\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n  const handleShow = (_id) => {\r\n    setShow(true);\r\n    dispatch(getOne(_id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"page-section p-4\">\r\n        <div className=\"row\">\r\n          <div className=\"col-xl-4 col-lg-5 col-md-12 col-12\">\r\n            <div className=\"add-departmen chart\">\r\n              <h4 className=\"mb-4\">Add New Office Shift</h4>\r\n              <Form onSubmit={handelSubmit}>\r\n                <Form.Group className=\"my-3\">\r\n                  <Form.Label>\r\n                    Shift <span className=\"text-danger\">*</span>{\" \"}\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    aria-label=\"Default select example\"\r\n                    placeholder=\"Shift Name\"\r\n                    ref={shiftRef}\r\n                    required\r\n                  />\r\n\r\n                  <span className=\"text-danger\">\r\n                    {data.errors.length > 0\r\n                      ? data.errors.map((err) =>\r\n                        err.param === \"shift\" ? (\r\n                          <TitleCase key=\"err-1\" text={err.msg} />\r\n                        ) : (\r\n                          \"\"\r\n                        )\r\n                      )\r\n                      : \"\"}\r\n                  </span>\r\n                </Form.Group>\r\n                <Form.Group\r\n                  className=\"my-3\"\r\n                  controlId=\"exampleForm.ControlInput1\"\r\n                >\r\n                  <Form.Label>\r\n                    Office Time <span className=\"text-danger\">*</span>{\" \"}\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"time\"\r\n                    ref={startRef}\r\n                    placeholder=\"Title\"\r\n                    required\r\n                  />\r\n                  <span className=\"text-danger\">\r\n                    {data.errors.length > 0\r\n                      ? data.errors.map((err) =>\r\n                        err.param === \"time_in\" ? (\r\n                          <TitleCase key=\"err-2\" text={err.msg} />\r\n                        ) : (\r\n                          \"\"\r\n                        )\r\n                      )\r\n                      : \"\"}\r\n                  </span>\r\n                  <p className=\"pt-2\">To</p>\r\n                  <Form.Control\r\n                    type=\"time\"\r\n                    ref={endRef}\r\n                    placeholder=\"Name\"\r\n                    required\r\n                  />\r\n                  <span className=\"text-danger\">\r\n                    {data.errors.length > 0\r\n                      ? data.errors.map((err) =>\r\n                        err.param === \"time_out\" ? (\r\n                          <TitleCase key=\"err-3\" text={err.msg} />\r\n                        ) : (\r\n                          \"\"\r\n                        )\r\n                      )\r\n                      : \"\"}\r\n                  </span>\r\n                </Form.Group>\r\n                <Form.Group\r\n                  className=\"my-3\"\r\n                  controlId=\"exampleForm.ControlInput1\"\r\n                >\r\n                  <Form.Label>\r\n                    Lunch Duration(HH:MM) <span className=\"text-danger\">*</span>{\" \"}\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"time\"\r\n                    ref={lunchTimetRef}\r\n                    placeholder=\"enter time\"\r\n                    required\r\n                  />\r\n                  <span className=\"text-danger\">\r\n                    {data.errors.length > 0\r\n                      ? data.errors.map((err) =>\r\n                        err.param === \"lunch_time\" ? (\r\n                          <TitleCase key=\"err-4\" text={err.msg} />\r\n                        ) : (\r\n                          \"\"\r\n                        )\r\n                      )\r\n                      : \"\"}\r\n                  </span>\r\n                </Form.Group>\r\n                {data.isSubmitting ? (\r\n                  <Button variant=\"primary\" className=\"mt-4\">\r\n                    <Spinner\r\n                      as=\"span\"\r\n                      animation=\"grow\"\r\n                      size=\"sm\"\r\n                      role=\"status\"\r\n                      aria-hidden=\"true\"\r\n                    />\r\n                    &#10240;Save\r\n                  </Button>\r\n                ) : (\r\n                  <Button type=\"submit\" variant=\"danger\" className=\"mt-4\">\r\n                    Save\r\n                  </Button>\r\n                )}\r\n              </Form>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-xl-8 col-lg-7 col-md-12 col-12\">\r\n            <div className=\"add-departmen chart\">\r\n              <div className=\"d-flex justify-content-between align-items-center\">\r\n                <h4 className=\"mb-0\">List All Office Shift</h4>\r\n              </div>\r\n              <div className=\"responsive mt-4\">\r\n                <Table striped bordered hover>\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"text-white\">S.No.</th>\r\n                      <th className=\"text-white\">Shift</th>\r\n                      <th className=\"text-white\">\r\n                        Office&#10240;Timing\r\n                      </th>\r\n                      <th className=\"text-white\">\r\n                        Lunch&#10240;Time\r\n                      </th>\r\n                      <th className=\"text-white\">Created&#10240;At</th>\r\n                      <th className=\"text-white\">Status</th>\r\n                      <th className=\"text-white\">Action</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {data.isLoading ? (\r\n                      <tr key={0} className=\"text-center\">\r\n                        <td colSpan={7}>Loading...</td>\r\n                      </tr>\r\n                    ) : data.allData.length > 0 ? (\r\n                      data.allData.map((result, index) => {\r\n                        return (\r\n                          <tr key={index}>\r\n                            <td>{index + 1}</td>\r\n                            <td>\r\n                              <TitleCase text={result.shift} />\r\n                            </td>\r\n                            <td>\r\n                              <LocalTimeZone time={result.time_in} />\r\n                              &#10240;-&#10240;\r\n                              <LocalTimeZone time={result.time_out} />\r\n                            </td>\r\n                            <td>{result.lunch_time}</td>\r\n                            <td><LocaDateFormate date_arg={result.created_at} /></td>\r\n                            <td>\r\n                              <p\r\n                                className={\r\n                                  result.active ? \"text-success\" : \"text-danger\"\r\n                                }\r\n                              >\r\n                                {result.active ? \"Active\" : \"Block\"}\r\n                              </p>\r\n                            </td>\r\n                            <td className=\"d-flex align-items-center\">\r\n                              <Button\r\n                                onClick={() => {\r\n                                  handleShow(result._id);\r\n                                }}\r\n                                className=\"btn btn-warning text-white\"\r\n                              >\r\n                                Edit\r\n                              </Button>\r\n                              {!result.is_deleted && (\r\n                                <Button\r\n                                  onClick={() =>\r\n                                    dispatch(\r\n                                      updateStatus({\r\n                                        jwt,\r\n                                        id: result._id,\r\n                                        active: !result.active,\r\n                                        data: result,\r\n                                        index,\r\n                                      })\r\n                                    )\r\n                                  }\r\n                                  className={\r\n                                    !result.active\r\n                                      ? \"btn btn-primary text-white ms-2\"\r\n                                      : \"btn btn-danger text-white ms-2\"\r\n                                  }\r\n                                  variant={!result.active ? \"primary\" : \"danger\"}\r\n                                >\r\n                                  {!result.active ? \"Active\" : \"Block\"}\r\n                                </Button>\r\n                              )}\r\n                            </td>\r\n                          </tr>\r\n                        )\r\n                      })\r\n                    ) : (\r\n                      <tr key={0}>\r\n                        <td colSpan={8} className=\"text-center\">\r\n                          No Data Found\r\n                        </td>\r\n                      </tr>\r\n                    )}\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Update Office Timeing </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={update}>\r\n            <Form.Group className=\"my-3\">\r\n              <Form.Label>\r\n                Shift <span className=\"text-danger\">*</span>{\" \"}\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                aria-label=\"Default select example\"\r\n                placeholder=\"Shift Name\"\r\n                ref={editShiftRef}\r\n                defaultValue={\r\n                  data.singledata.length > 0 ? data.singledata[0].shift : \"\"\r\n                }\r\n                required\r\n              />\r\n\r\n              <span className=\"text-danger\">\r\n                {data.editErrors.length > 0\r\n                  ? data.editErrors.map((err) =>\r\n                    err.param === \"shift\" ? (\r\n                      <TitleCase key=\"editerr-1\" text={err.msg} />\r\n                    ) : (\r\n                      \"\"\r\n                    )\r\n                  )\r\n                  : \"\"}\r\n              </span>\r\n            </Form.Group>\r\n            <Form.Group className=\"my-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>\r\n                Office Time <span className=\"text-danger\">*</span>{\" \"}\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"time\"\r\n                ref={editStartRef}\r\n                defaultValue={\r\n                  data.singledata.length > 0 ? LocalTimeZone({ time: data.singledata[0].time_in }) : \"\"\r\n                }\r\n                placeholder=\"Name\"\r\n                required\r\n              />\r\n              <span className=\"text-danger\">\r\n                {data.editErrors.length > 0\r\n                  ? data.editErrors.map((err) =>\r\n                    err.param === \"time_in\" ? (\r\n                      <TitleCase key=\"editerr-2\" text={err.msg} />\r\n                    ) : (\r\n                      \"\"\r\n                    )\r\n                  )\r\n                  : \"\"}\r\n              </span>\r\n              <p className=\"pt-2\">To</p>\r\n              <Form.Control\r\n                type=\"time\"\r\n                ref={editEndRef}\r\n                defaultValue={\r\n                  data.singledata.length > 0 ? LocalTimeZone({ time: data.singledata[0].time_out }) : \"\"\r\n                }\r\n                placeholder=\"Name\"\r\n                required\r\n              />\r\n              <span className=\"text-danger\">\r\n                {data.editErrors.length > 0\r\n                  ? data.editErrors.map((err) =>\r\n                    err.param === \"time_out\" ? (\r\n                      <TitleCase key=\"editerr-3\" text={err.msg} />\r\n                    ) : (\r\n                      \"\"\r\n                    )\r\n                  )\r\n                  : \"\"}\r\n              </span>\r\n            </Form.Group>\r\n            <Form.Group className=\"my-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>\r\n                Lunch Time <span className=\"text-danger\">*</span>{\" \"}\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"time\"\r\n                defaultValue={\r\n                  data.singledata.length > 0\r\n                    ? data.singledata[0].lunch_time\r\n                    : \"\"\r\n                }\r\n                ref={editLunchTimetRef}\r\n                placeholder=\"enter time\"\r\n                required\r\n              />\r\n              <span className=\"text-danger\">\r\n                {data.editErrors.length > 0\r\n                  ? data.editErrors.map((err) =>\r\n                    err.param === \"lunch_time\" ? (\r\n                      <TitleCase key=\"editerr-4\" text={err.msg} />\r\n                    ) : (\r\n                      \"\"\r\n                    )\r\n                  )\r\n                  : \"\"}\r\n              </span>\r\n            </Form.Group>\r\n            {data.isEditSubmitting ? (\r\n              <Button variant=\"danger\" className=\"mt-4\">\r\n                <Spinner\r\n                  as=\"span\"\r\n                  animation=\"grow\"\r\n                  size=\"sm\"\r\n                  role=\"status\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n                &#10240;Update\r\n              </Button>\r\n            ) : (\r\n              <Button type=\"submit\" variant=\"danger\" className=\"mt-4\">\r\n                Update\r\n              </Button>\r\n            )}\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OfficeShift;\r\n"],"names":["props","dispatch","useDispatch","jwt","shiftRef","useRef","lunchTimetRef","startRef","endRef","editEndRef","editShiftRef","editStartRef","editLunchTimetRef","_useState","useState","_useState2","_slicedToArray","show","setShow","useEffect","getAll","data","useSelector","status","timeSlot","isError","current","value","_jsxs","_Fragment","children","_jsx","className","Form","onSubmit","e","preventDefault","start","Date","x","split","setHours","parseInt","setMinutes","setSeconds","end","y","addRecord","shift","startTime","endTime","lunchTime","Group","Label","Control","type","placeholder","ref","required","errors","length","map","err","param","TitleCase","text","msg","controlId","isSubmitting","Button","variant","Spinner","as","animation","size","role","Table","striped","bordered","hover","isLoading","colSpan","allData","result","index","LocalTimeZone","time","time_in","time_out","lunch_time","LocaDateFormate","date_arg","created_at","active","onClick","_id","getOne","is_deleted","updateStatus","id","Modal","onHide","Header","closeButton","Title","Body","console","log","updateRecord","singledata","defaultValue","editErrors","isEditSubmitting"],"sourceRoot":""}