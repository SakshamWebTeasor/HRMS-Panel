{"version":3,"file":"static/js/592.a39244a0.chunk.js","mappings":"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","sources":["Pages/admin/laave-type.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addRecord, getOne, getAll, updateRecord, deleteRecord } from \"../../store/admin/leave-type\";\nimport \"./designation.css\";\nimport { Spinner, Modal, Table, Button, Form } from \"react-bootstrap\";\nimport TitleCase from \"../../helper/title-case\";\n\nfunction LeaveType(props) {\n  const dispatch = useDispatch();\n  const jwt = props.jwt;\n\n  const nameref = useRef();\n  const noOfLeaveRef = useRef();\n  const typeRef = useRef();\n  const editname = useRef();\n  const edittypeRef = useRef();\n  const editnoOfLeaveRef = useRef();\n  const [id, setId] = useState();\n  const [show, setShow] = useState(false);\n  const [showDelete, setShowDelete] = useState(false);\n  const data = useSelector((status) => status.leaveType);\n  useEffect(() => {\n    dispatch(getAll({ jwt }));\n  }, [dispatch, jwt]);\n\n  //... create leave....//\n  const handelSubmit = (e) => {\n    e.preventDefault();\n    dispatch(\n      addRecord({\n        jwt,\n        name: nameref.current.value,\n        type: typeRef.current.value,\n        noOfLeaves: noOfLeaveRef.current.value,\n      })\n    );\n    \n  };\n  //... update leave ....//\n  useEffect(() => {\n    if (!data.isError) {\n      setShow(false);\n      nameref.current.value = \"\";\n      typeRef.current.value = \"\";\n      noOfLeaveRef.current.value = null;\n      }\n  }, [data.isError]);\n\n  const update = (e) => {\n    e.preventDefault();\n    dispatch(\n      updateRecord({\n        jwt,\n        id: data.singledata[0]._id,\n        name: editname.current.value,\n        type: edittypeRef.current.value,\n        noOfLeaves: editnoOfLeaveRef.current.value,\n      })\n    );\n  };\n\n  //delete.....\n  const handeldelete = () => {\n    dispatch(\n      deleteRecord({\n        jwt,\n        id,\n        pageno:\n          data.allData.length === 1 && data.currentpage > 1\n            ? Number(data.currentpage) - 1\n            : data.currentpage,\n      })\n    );\n  };\n\n  //edite...//\n  const handleClose = () => {\n    setShow(false);\n  };\n  const handleShow = (_id) => {\n    setShow(true);\n    dispatch(getOne(_id));\n  };\n //...delete..//\n const handleDeleteClose = () => {\n  setShowDelete(false);\n };\n\n const handleDeleteShow = (id) => {\n  setShowDelete(true);\n  setId(id);\n  };\n  return (\n    <>\n      <div className=\"page-section p-4\">\n        <div className=\"row\">\n          <div className=\"col-xl-4 col-lg-5 col-md-12 col-12\">\n            <div className=\"add-departmen chart\">\n              <h4 className=\"mb-4\">Add New Leave Type</h4>\n              <Form onSubmit={handelSubmit}>\n                <Form.Group className=\"my-3\">\n                  <Form.Label>\n                    Leave Title <span className=\"text-danger\">*</span>{\" \"}\n                  </Form.Label>\n                  <Form.Control\n                    name=\"title\"\n                    type=\"text\"\n                    placeholder=\"Title\"\n                    ref={nameref}\n                    required\n                  />\n                  <span className=\"text-danger\">\n                    {data.errors.length > 0\n                      ? data.errors.map((err) =>\n                          err.param === \"name\" ? (\n                            <TitleCase key=\"editerr-1\" text={err.msg} />\n                          ) : (\n                            \"\"\n                          )\n                        )\n                      : \"\"}\n                  </span>\n                </Form.Group>\n                <Form.Group\n                  className=\"my-3\"\n                  controlId=\"exampleForm.ControlInput1\"\n                >\n                  <Form.Label>\n                    Leave Type <span className=\"text-danger\">*</span>{\" \"}\n                  </Form.Label>\n                  <Form.Select\n                    aria-label=\"Default select example\"\n                    ref={typeRef}\n                    required\n                  >\n                    <option value={\"\"}>select</option>\n                    <option value=\"paid\">Paid</option>\n                    <option value=\"unpaid\">Unpaid</option>\n                  </Form.Select>\n                  <span className=\"text-danger\">\n                    {data.errors.length > 0\n                      ? data.errors.map((err) =>\n                          err.param === \"type\" ? (\n                            <TitleCase key=\"editerr-2\" text={err.msg} />\n                          ) : (\n                            \"\"\n                          )\n                        )\n                      : \"\"}\n                  </span>\n                </Form.Group>\n                <Form.Group\n                  className=\"my-3\"\n                  controlId=\"exampleForm.ControlInput1\"\n                >\n                  <Form.Label>\n                    Total Days <span className=\"text-danger\">*</span>{\" \"}\n                  </Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    ref={noOfLeaveRef}\n                    min={1}\n                    max={365}\n                    placeholder=\"Days\"\n                    required\n                  />\n                  <span className=\"text-danger\">\n                    {data.errors.length > 0\n                      ? data.errors.map((err) =>\n                          err.param === \"total\" ? (\n                            <TitleCase key=\"editerr-3\" text={err.msg} />\n                          ) : (\n                            \"\"\n                          )\n                        )\n                      : \"\"}\n                  </span>\n                </Form.Group>\n                {data.isSubmitting ? (\n                  <Button variant=\"primary\" className=\"mt-4\">\n                    <Spinner\n                      as=\"span\"\n                      animation=\"grow\"\n                      size=\"sm\"\n                      role=\"status\"\n                      aria-hidden=\"true\"\n                    />\n                    &#10240;Save\n                  </Button>\n                ) : (\n                  <Button type=\"submit\" variant=\"danger\" className=\"mt-4\">\n                    Save\n                  </Button>\n                )}\n              </Form>\n            </div>\n          </div>\n          <div className=\"col-xl-8 col-lg-7 col-md-12 col-12\">\n            <div className=\"add-departmen chart\">\n              <div className=\"d-flex justify-content-between align-items-center\">\n                <h4 className=\"mb-0\">List All Leave Types</h4>\n              </div>\n\n              <div className=\"responsive mt-4\">\n                <Table striped bordered hover>\n                  <thead>\n                    <tr>\n                      <th className=\"text-white\">S.No.</th>\n                      <th className=\"text-white\">Name</th>\n                      <th className=\"text-white\">Type</th>\n                      <th className=\"text-white\">Total&#10240;Days</th>\n                      <th className=\"text-white\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {data.isLoading ? (\n                      <tr key={0} className=\"text-center\">\n                        <td colSpan={6}>Loading...</td>\n                      </tr>\n                    ) : data.allData.length > 0 ? (\n                      data.allData.map((result, index) => (\n                        <tr key={index}>\n                          <td>{index + 1}</td>\n                          <td>\n                            {result.name.charAt(0).toUpperCase() +\n                              result.name.slice(1)}\n                          </td>\n                          <td>\n                            {result.type.charAt(0).toUpperCase() +\n                              result.type.slice(1)}\n                          </td>\n                          <td>{result.total}</td>\n                          <td className=\"d-lg-block d-flex align-items-center\">\n                            <Button\n                              onClick={() => {\n                                handleShow(result._id);\n                              }}\n                              className=\"btn btn-warning text-white\"\n                            >\n                              Edit\n                            </Button>\n                            <Button\n                              variant=\"danger\"\n                              className=\"ms-2\"\n                              onClick={() => {\n                                handleDeleteShow(result._id);\n                              }}\n                            >\n                              Delete\n                            </Button>\n                          </td>\n                          \n                        </tr>\n                      ))\n                    ) : (\n                      <tr key={0}>\n                        <td colSpan={6} className=\"text-center\">\n                          No Data Found\n                        </td>\n                      </tr>\n                    )}\n                  </tbody>\n                </Table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Update Leave Type </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={update}>\n            <Form.Group className=\"my-3\">\n              <Form.Label>\n                Leave Title <span className=\"text-danger\">*</span>{\" \"}\n              </Form.Label>\n              <Form.Control\n                aria-label=\"Default select example\"\n                ref={editname}\n                placeholder=\"Title\"\n                defaultValue={\n                  data.singledata.length > 0 ? data.singledata[0].name : \"\"\n                }\n                required\n              ></Form.Control>\n              <span className=\"text-danger\">\n                {data.editErrors.length > 0\n                  ? data.editErrors.map((err) =>\n                      err.param === \"name\" ? (\n                        <TitleCase key=\"editerr-1\" text={err.msg} />\n                      ) : (\n                        \"\"\n                      )\n                    )\n                  : \"\"}\n              </span>\n            </Form.Group>\n            <Form.Group className=\"my-3\" controlId=\"exampleForm.ControlInput1\">\n              <Form.Label>\n                Leave Type <span className=\"text-danger\">*</span>{\" \"}\n              </Form.Label>\n              <Form.Select\n                aria-label=\"Default select example\"\n                ref={edittypeRef}\n                required\n                defaultValue={\n                  data.singledata.length > 0 ? data.singledata[0].type : \"\"\n                }\n              >\n                <option value={\"\"}>select</option>\n                <option value=\"paid\">Paid</option>\n                <option value=\"unpaid\">Unpaid</option>\n              </Form.Select>\n              <span className=\"text-danger\">\n                {data.editErrors.length > 0\n                  ? data.editErrors.map((err) =>\n                      err.param === \"type\" ? (\n                        <TitleCase key=\"editerr-2\" text={err.msg} />\n                      ) : (\n                        \"\"\n                      )\n                    )\n                  : \"\"}\n              </span>\n            </Form.Group>\n            <Form.Group className=\"my-3\" controlId=\"exampleForm.ControlInput1\">\n              <Form.Label>\n                Total Days<span className=\"text-danger\">*</span>{\" \"}\n              </Form.Label>\n              <Form.Control\n                type=\"number\"\n                ref={editnoOfLeaveRef}\n                defaultValue={\n                  data.singledata.length > 0 ? data.singledata[0].total : \"\"\n                }\n                min={1}\n                max={365}\n                required\n                placeholder=\"Days\"\n              />\n              <span className=\"text-danger\">\n                {data.editErrors.length > 0\n                  ? data.editErrors.map((err) =>\n                      err.param === \"total\" ? (\n                        <TitleCase key=\"editerr-3\" text={err.msg} />\n                      ) : (\n                        \"\"\n                      )\n                    )\n                  : \"\"}\n              </span>\n            </Form.Group>\n            {data.isEditSubmitting ? (\n              <Button variant=\"danger\" className=\"mt-4\">\n                <Spinner\n                  as=\"span\"\n                  animation=\"grow\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                />\n                &#10240;Update\n              </Button>\n            ) : (\n              <Button type=\"submit\" variant=\"danger\" className=\"mt-4\">\n                Update\n              </Button>\n            )}\n          </Form>\n        </Modal.Body>\n      </Modal>\n      <Modal show={showDelete} onHide={handleDeleteClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Delete</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Do you really want to delete?</Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"danger\"\n            onClick={() => {\n              handleDeleteClose();\n              handeldelete();\n            }}\n          >\n            Yes\n          </Button>\n          <Button variant=\"primary\" onClick={handleDeleteClose}>\n            No\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default LeaveType;\n"],"names":["props","dispatch","useDispatch","jwt","nameref","useRef","noOfLeaveRef","typeRef","editname","edittypeRef","editnoOfLeaveRef","id","setId","useState","show","setShow","showDelete","setShowDelete","data","useSelector","status","leaveType","useEffect","getAll","isError","current","value","handleDeleteClose","_jsxs","_Fragment","children","_jsx","className","Form","onSubmit","e","preventDefault","addRecord","name","type","noOfLeaves","Group","Label","Control","placeholder","ref","required","errors","length","map","err","param","TitleCase","text","msg","controlId","Select","min","max","isSubmitting","Button","variant","Spinner","as","animation","size","role","Table","striped","bordered","hover","isLoading","colSpan","allData","result","index","charAt","toUpperCase","slice","total","onClick","_id","getOne","handleDeleteShow","Modal","onHide","handleClose","Header","closeButton","Title","Body","updateRecord","singledata","defaultValue","editErrors","isEditSubmitting","Footer","deleteRecord","pageno","currentpage","Number"],"sourceRoot":""}