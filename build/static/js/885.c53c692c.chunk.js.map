{"version":3,"file":"static/js/885.c53c692c.chunk.js","mappings":"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","sources":["Pages/users/dashboard.js","helper/watch.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAll, makeAttendence, setIsSubmitting } from \"../../store/user/dashboard\";\r\nimport { debounce } from \"lodash\";\r\nimport \"./dashboard.css\";\r\nimport { BiCoinStack } from \"react-icons/bi\";\r\nimport { GiBanknote } from \"react-icons/gi\";\r\nimport User from \"../../assets/images/user.jpg\";\r\nimport Chart from \"react-apexcharts\";\r\nimport Loader from \"../../Components/loader\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport Watch, { CalculateRealTimePresence } from \"../../helper/watch\";\r\nconst env = require('../../env.json');\r\n\r\n\r\n\r\nfunction Dashboard(props) {\r\n\r\n  const [ip, setIP] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const socket = props.socket\r\n  const jwt = props.jwt;\r\n  const notify = props.notify;\r\n\r\n  const data = useSelector((status) => status.userDashboard);\r\n  console.log(\"data:\", data)\r\n\r\n  const getData = async () => {\r\n    let option = {\r\n      method: 'GET',\r\n      mode: 'cors',\r\n    }\r\n    const res = await fetch(\"https://api.ipify.org/?format=json\", option)\r\n    setIP((await res.json()).ip);\r\n  };\r\n\r\n  function getDeviceOS() {\r\n    const userAgent = navigator.userAgent.toLowerCase();\r\n\r\n    if (userAgent.includes(\"android\")) {\r\n      return \"Android\";\r\n    } else if (userAgent.includes(\"iphone\") || userAgent.includes(\"ipad\") || userAgent.includes(\"ipod\")) {\r\n      return \"iOS\";\r\n    } else if (userAgent.includes(\"windows\")) {\r\n      return \"Windows\";\r\n    } else if (userAgent.includes(\"linux\")) {\r\n      return \"Linux\";\r\n    } else {\r\n      return \"Unknown\";\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getAll({ jwt }));\r\n    getData(); //getting Ip\r\n  }, [dispatch, jwt]);\r\n\r\n  const deviceOS = getDeviceOS() //getting device type\r\n  console.log('ip:', ip, deviceOS)\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"setuser\", { email: props.current_user.email, department: props.current_user.designation.department })\r\n\r\n    socket.emit('check_notice')\r\n\r\n    socket.on('recive_notice', (data) => {\r\n      if (data.is_announ) {\r\n        props.setAnnouncement_New_notice(true)\r\n        props.setTotalAnnoun(data.total_announ)\r\n      }\r\n      if (data.is_policy) {\r\n        props.setPolicy_New_notice(true)\r\n        props.setTotalPlicy(data.total_policy)\r\n      }\r\n    })\r\n  }, [props, socket])\r\n\r\n  //......make Attendance....//\r\n  const hendelAttendence = debounce(() => {\r\n    console.log('in hendelAttendence')\r\n    dispatch(setIsSubmitting(true))\r\n    console.log('post dispatch setIsSubmitting(1)')\r\n    if (!navigator.geolocation) {\r\n      console.log('geolocation not found')\r\n      notify(\"Geolocation is not supported by your browser\", true);\r\n      dispatch(setIsSubmitting(false))\r\n    } else {\r\n      console.log('geolocation found & hit api1')\r\n      //84a9abc4058a42cd8bf5622a7255352e\r\n      fetch(`https://api.ipgeolocation.io/ipgeo?apiKey=${env.APi_Key}`)\r\n        .then(response => response.json())\r\n        .then(ipData => {\r\n          const { latitude, longitude } = ipData;\r\n          dispatch(\r\n            makeAttendence({\r\n              jwt,\r\n              latitude,\r\n              longitude,\r\n              type:\r\n                !data.todayAttendance.outTime && !data.todayAttendance.inTime\r\n                  ? \"check_in\"\r\n                  : \"check_out\",\r\n            })\r\n          );\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error fetching geolocation data:\", error);\r\n          notify(\"Failed to fetch geolocation data\", true);\r\n          dispatch(setIsSubmitting(false));\r\n        });\r\n      // navigator.geolocation.getCurrentPosition((position) => {\r\n      //   console.log('geolocation found & hit api2')\r\n      //   dispatch(\r\n      //     makeAttendence({\r\n      //       jwt,\r\n      //       latitude: position.coords.latitude,\r\n      //       longitude: position.coords.longitude,\r\n      //       type:\r\n      //         !data.todayAttendance.outTime && !data.todayAttendance.inTime\r\n      //           ? \"check_in\"\r\n      //           : \"check_out\",\r\n      //     })\r\n      //   );\r\n      // });\r\n    }\r\n  }, 100);\r\n  const barChartAttendance = {\r\n    options: {\r\n      chart: {\r\n        id: \"basic-bar\",\r\n      },\r\n      xaxis: {\r\n        type: \"category\",\r\n        categories: [],\r\n        labels: {\r\n          formatter: function (val) {\r\n            return val;\r\n          },\r\n        },\r\n      },\r\n      yaxis: [\r\n        {\r\n          labels: {\r\n            formatter: function (val) {\r\n              return val;\r\n            },\r\n          },\r\n          title: {\r\n            text: \"In Hours\",\r\n          },\r\n        },\r\n      ],\r\n    },\r\n\r\n    series: [\r\n      {\r\n        name: \"duration\",\r\n        data: [],\r\n      },\r\n    ],\r\n  };\r\n  const barChartSettings = {\r\n    options: {\r\n      chart: {\r\n        id: \"basic-bar\",\r\n      },\r\n      xaxis: {\r\n        categories: [],\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        data: [],\r\n      },\r\n    ],\r\n  };\r\n  data.attendance_chart.map((result) => {\r\n    return (\r\n      barChartAttendance.series[0].data.push(result.value),\r\n      barChartAttendance.options.xaxis.categories.push(result.date.slice(0, 10))\r\n    );\r\n  });\r\n\r\n  data.salary_chart.map((result) => {\r\n    return (\r\n      barChartSettings.series[0].data.push(result.value),\r\n      barChartSettings.options.xaxis.categories.push(result.month)\r\n    );\r\n  });\r\n\r\n  ///...///\r\n  const date = new Date();\r\n\r\n\r\n  if (data.isLoading) return <Loader />;\r\n  return (\r\n    <div className=\"page-section p-4\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <div className=\"d-flex\">\r\n              <img\r\n                src={\r\n                  props.current_user.image_link\r\n                    ? props.current_user.image_link\r\n                    : User\r\n                }\r\n                alt=\"User\"\r\n                className=\"img-fluid rounded-circle\"\r\n                style={{ width: \"50px\", height: \"50px\" }}\r\n              />\r\n              <div className=\"ms-2\">\r\n                <h5 className=\"mb-0\">\r\n                  <h1 style={{ color: \"red\" }}>{props.current_user.name}</h1>\r\n                  Logged in through:{deviceOS}\r\n                </h5>\r\n                {/* <p className=\"text-muted mb-0\">{props.current_user.email}</p> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-9 col-12\">\r\n          <div className=\"row mt-md-4 mt-0\">\r\n            <div className=\"col-xl-3 col-lg-3 col-md-6 col-12\">\r\n              <div className=\"box-dashboard\">\r\n                <div className=\"d-flex align-items-center justify-content-between\">\r\n                  <div className=\"\">\r\n                    <h5 className=\"text-muted mb-4\">Total Hours</h5>\r\n                    <h3 className=\"text-muted mb-0\"><CalculateRealTimePresence inTime={data.todayAttendance.inTime} outTime={data.todayAttendance.outTime} duration={data.todayAttendance.duration} /></h3>\r\n                  </div>\r\n                  <div className=\"text-danger\">\r\n                    <BiCoinStack />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xl-3 col-lg-3 col-md-6 col-12\">\r\n              <div className=\"box-dashboard\">\r\n                <div className=\"d-flex align-items-center justify-content-between\">\r\n                  <div className=\"\">\r\n                    <h5 className=\"text-muted mb-4\"> Total Presence</h5>\r\n                    <h3 className=\"text-muted mb-0\">{data.total_present}</h3>\r\n                  </div>\r\n                  <div className=\"text-danger\">\r\n                    <GiBanknote />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xl-3 col-lg-3 col-md-6 col-12\">\r\n              <div className=\"box-dashboard\">\r\n                <div className=\"d-flex align-items-center justify-content-between\">\r\n                  <div className=\"\">\r\n                    <h5 className=\"text-muted mb-4\">Total Leave</h5>\r\n                    <h3 className=\"text-muted mb-0\">\r\n                      {data.total_leaves.paid_leave}\r\n                      <span>-Paid</span>\r\n                    </h3>\r\n                    <h3 className=\"text-muted mb-0\">\r\n                      {\" \"}\r\n                      {data.total_leaves.unpaid_leave}\r\n                      <span>-UnPaid</span>\r\n                    </h3>\r\n                  </div>\r\n                  <div className=\"text-danger\">\r\n                    <GiBanknote />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xl-3 col-lg-3 col-md-6 col-12\">\r\n              <div className=\"box-dashboard\">\r\n                <div className=\"d-flex align-items-center justify-content-between\">\r\n                  <div className=\"\">\r\n                    <h5 className=\"text-muted mb-4\"> Total Earning</h5>\r\n                    <h3 className=\"text-muted mb-0\">\r\n                      &#8377; {data.total_salary}{\" \"}\r\n                    </h3>\r\n                  </div>\r\n                  <div className=\"text-danger\">\r\n                    <BiCoinStack />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row mt-md-4 mt-0\">\r\n            <div className=\"col-xl-6 col-lg-6 col-12\">\r\n              <div className=\"chart\">\r\n                <h4>Attendance</h4>\r\n                <Chart\r\n                  options={barChartAttendance.options}\r\n                  series={barChartAttendance.series}\r\n                  type=\"bar\"\r\n                  width=\"100%\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xl-6 col-lg-6 col-12\">\r\n              <div className=\"chart\">\r\n                <h4>Payroll monthly report</h4>\r\n                <Chart\r\n                  options={barChartSettings.options}\r\n                  series={barChartSettings.series}\r\n                  type=\"line\"\r\n                  width=\"100%\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-3 col-12\">\r\n          {(deviceOS == \"Windows\" || deviceOS == \"Linux\") && <div className=\"timezone mt-md-4 mt-0\">\r\n            <div className=\"mb-0\">\r\n              <span className=\"date-section\">\r\n                Today: {date.toString().slice(0, 15)}\r\n              </span>\r\n              <p className=\"mb-0\">Time</p>\r\n              <span><Watch /></span>\r\n            </div>\r\n            <div className=\"text-left\">\r\n              <small>Get ready for an amazing workday!</small>\r\n              <br></br>\r\n              {data.todayAttendance.outTime && <><h4>Today you completed office Hours</h4></>}\r\n              {!data.isSubmitting ? (!data.todayAttendance.outTime &&\r\n                <button\r\n                  type=\"button\"\r\n                  className={\r\n                    data.todayAttendance.inTime\r\n                      ? data.todayAttendance.outTime\r\n                        ? \"btn btn-success\"\r\n                        : \"btn btn-danger\"\r\n                      : \"btn btn-success\"\r\n                  }\r\n                  onClick={hendelAttendence}\r\n                >\r\n                  {data.todayAttendance.inTime\r\n                    ? data.todayAttendance.outTime\r\n                      ? \"Check In\"\r\n                      : \"Check Out\"\r\n                    : \"Check In\"}\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  className={\r\n                    data.todayAttendance.inTime\r\n                      ? data.todayAttendance.outTime\r\n                        ? \"btn btn-success\"\r\n                        : \"btn btn-danger\"\r\n                      : \"btn btn-success\"\r\n                  }\r\n                  disabled\r\n                >\r\n                  <Spinner\r\n                    as=\"span\"\r\n                    animation=\"grow\"\r\n                    size=\"sm\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                  {data.todayAttendance.inTime\r\n                    ? data.todayAttendance.outTime\r\n                      ? \"Check In\"\r\n                      : \"Check Out\"\r\n                    : \"Check In\"}\r\n                </button>\r\n              )}\r\n              <small>Policy: Normal Attendance Policy </small>\r\n            </div>\r\n          </div>}\r\n          {/* <div className=\"timezone mt-md-4 mt-0\">\r\n            <h5>\r\n              Holiday <small>Current Month</small>\r\n            </h5>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nfunction Watch() {\r\n    const [value, setValue] = useState(new Date());\r\n    useEffect(() => {\r\n        const interval = setInterval(() => setValue(new Date()), 1000);\r\n\r\n        return () => {\r\n        clearInterval(interval);\r\n        };\r\n    }, []);\r\n    return  <span>{value.toLocaleTimeString()}</span>\r\n}\r\n\r\nfunction CalculateRealTimePresence(data) {\r\n    const [value1, setValue1] = useState(\"00:00\");\r\n    useEffect(() => {\r\n        const interval1 = setInterval(() => {\r\n        if (data.outTime) {\r\n            return setValue1(data.duration?data.duration:data.effective);\r\n        }\r\n        if (data.inTime) {\r\n            //check in time\r\n            let intime_h = new Date(data.inTime).getHours()\r\n            let intime_m = new Date(data.inTime).getMinutes()\r\n            let intime_in_minutes=0\r\n\r\n            //current time \r\n            let current_h = new Date().getHours();\r\n            let current_m = new Date().getMinutes();\r\n            let current_in_minutes = current_h * 60 + current_m;\r\n\r\n            let diff_min\r\n            if(current_h>=intime_h){\r\n                intime_in_minutes = intime_h * 60 + intime_m;\r\n                diff_min = (current_in_minutes - intime_in_minutes);\r\n            }else{\r\n                if((60 - intime_m) === 0){\r\n                    intime_in_minutes = (24-intime_h) * 60\r\n                }else{\r\n                    intime_in_minutes = (24-intime_h-1) * 60 + (60 - intime_m)\r\n                }\r\n                diff_min = (current_in_minutes + intime_in_minutes);\r\n            }\r\n\r\n            \r\n           \r\n            let duration_hours = `${(parseInt(diff_min / 60).toString().padStart(2, '0'))}:${\r\n            diff_min % 60 <= 9\r\n                ? `${(Math.round(diff_min % 60)).toString().padStart(2, '0')}`\r\n                : `${diff_min % 60}`\r\n            }`;\r\n            \r\n            return setValue1(duration_hours);\r\n        }\r\n        }, 1000);\r\n        return () => {\r\n        clearInterval(interval1);\r\n        };\r\n    }, [data]);\r\n\r\n    return <span>{value1}</span>\r\n}\r\n\r\nexport {CalculateRealTimePresence};\r\nexport default Watch;"],"names":["env","require","props","_useState","useState","_useState2","_slicedToArray","ip","setIP","dispatch","useDispatch","socket","jwt","notify","data","useSelector","status","userDashboard","console","log","getData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","option","res","wrap","_context","prev","next","method","mode","fetch","sent","t0","json","t1","stop","apply","arguments","useEffect","getAll","deviceOS","userAgent","navigator","toLowerCase","includes","getDeviceOS","emit","email","current_user","department","designation","on","is_announ","setAnnouncement_New_notice","setTotalAnnoun","total_announ","is_policy","setPolicy_New_notice","setTotalPlicy","total_policy","hendelAttendence","debounce","setIsSubmitting","geolocation","concat","APi_Key","then","response","ipData","latitude","longitude","makeAttendence","type","todayAttendance","outTime","inTime","catch","error","barChartAttendance","options","chart","id","xaxis","categories","labels","formatter","val","yaxis","title","text","series","name","barChartSettings","attendance_chart","map","result","push","value","date","slice","salary_chart","month","Date","isLoading","_jsx","Loader","_jsxs","className","children","src","image_link","User","alt","style","width","height","color","CalculateRealTimePresence","duration","BiCoinStack","total_present","GiBanknote","total_leaves","paid_leave","unpaid_leave","total_salary","Chart","toString","Watch","_Fragment","isSubmitting","disabled","Spinner","as","animation","size","role","onClick","_useState3","_useState4","value1","setValue1","interval1","setInterval","effective","diff_min","intime_h","getHours","intime_m","getMinutes","current_h","current_in_minutes","duration_hours","parseInt","padStart","Math","round","clearInterval","setValue","interval","toLocaleTimeString"],"sourceRoot":""}