{"version":3,"file":"static/js/885.6dd3fb11.chunk.js","mappings":"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","sources":["Pages/users/dashboard.js","helper/watch.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAll, makeAttendence, setIsSubmitting } from \"../../store/user/dashboard\";\nimport { debounce } from \"lodash\";\nimport \"./dashboard.css\";\nimport { BiCoinStack } from \"react-icons/bi\";\nimport { GiBanknote } from \"react-icons/gi\";\nimport User from \"../../assets/images/user.jpg\";\nimport Chart from \"react-apexcharts\";\nimport Loader from \"../../Components/loader\";\nimport { Spinner } from \"react-bootstrap\";\nimport Watch, { CalculateRealTimePresence } from \"../../helper/watch\";\n\n\n\nfunction Dashboard(props) {\n\n  const [ip, setIP] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const socket = props.socket\n  const jwt = props.jwt;\n  const notify = props.notify;\n\n  const data = useSelector((status) => status.userDashboard);\n\n  const getData = async () => {\n    let option = {\n      method: 'GET',\n      mode: 'cors',\n    }\n    const res = await fetch(\"https://api.ipify.org/?format=json\", option)\n    setIP((await res.json()).ip);\n  };\n\n  function getDeviceOS() {\n    const userAgent = navigator.userAgent.toLowerCase();\n\n    if (userAgent.includes(\"android\")) {\n      return \"Android\";\n    } else if (userAgent.includes(\"iphone\") || userAgent.includes(\"ipad\") || userAgent.includes(\"ipod\")) {\n      return \"iOS\";\n    } else if (userAgent.includes(\"windows\")) {\n      return \"Windows\";\n    } else {\n      return \"Unknown\";\n    }\n  }\n\n  useEffect(() => {\n    dispatch(getAll({ jwt }));\n    getData(); //getting Ip\n  }, [dispatch, jwt]);\n\n  const deviceOS = getDeviceOS() //getting device type\n  console.log('ip:', ip, deviceOS)\n\n  useEffect(() => {\n    socket.emit(\"setuser\", { email: props.current_user.email, department: props.current_user.designation.department })\n\n    socket.emit('check_notice')\n\n    socket.on('recive_notice', (data) => {\n      if (data.is_announ) {\n        props.setAnnouncement_New_notice(true)\n        props.setTotalAnnoun(data.total_announ)\n      }\n      if (data.is_policy) {\n        props.setPolicy_New_notice(true)\n        props.setTotalPlicy(data.total_policy)\n      }\n    })\n  }, [props, socket])\n\n  //......make Attendance....//\n  const hendelAttendence = debounce(() => {\n    dispatch(setIsSubmitting(true))\n    if (!navigator.geolocation) {\n      notify(\"Geolocation is not supported by your browser\", true);\n      dispatch(setIsSubmitting(false))\n    } else {\n      navigator.geolocation.getCurrentPosition((position) => {\n        dispatch(\n          makeAttendence({\n            jwt,\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude,\n            type:\n              !data.todayAttendance.outTime && !data.todayAttendance.inTime\n                ? \"check_in\"\n                : \"check_out\",\n          })\n        );\n      });\n    }\n  }, 100);\n  const barChartAttendance = {\n    options: {\n      chart: {\n        id: \"basic-bar\",\n      },\n      xaxis: {\n        type: \"category\",\n        categories: [],\n        labels: {\n          formatter: function (val) {\n            return val;\n          },\n        },\n      },\n      yaxis: [\n        {\n          labels: {\n            formatter: function (val) {\n              return val;\n            },\n          },\n          title: {\n            text: \"In Hours\",\n          },\n        },\n      ],\n    },\n\n    series: [\n      {\n        name: \"duration\",\n        data: [],\n      },\n    ],\n  };\n  const barChartSettings = {\n    options: {\n      chart: {\n        id: \"basic-bar\",\n      },\n      xaxis: {\n        categories: [],\n      },\n    },\n    series: [\n      {\n        data: [],\n      },\n    ],\n  };\n  data.attendance_chart.map((result) => {\n    return (\n      barChartAttendance.series[0].data.push(result.value),\n      barChartAttendance.options.xaxis.categories.push(result.date.slice(0, 10))\n    );\n  });\n\n  data.salary_chart.map((result) => {\n    return (\n      barChartSettings.series[0].data.push(result.value),\n      barChartSettings.options.xaxis.categories.push(result.month)\n    );\n  });\n\n  ///...///\n  const date = new Date();\n\n\n  if (data.isLoading) return <Loader />;\n  return (\n    <div className=\"page-section p-4\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <div className=\"d-flex justify-content-between align-items-center\">\n            <div className=\"d-flex\">\n              <img\n                src={\n                  props.current_user.image_link\n                    ? props.current_user.image_link\n                    : User\n                }\n                alt=\"User\"\n                className=\"img-fluid rounded-circle\"\n                style={{ width: \"50px\", height: \"50px\" }}\n              />\n              <div className=\"ms-2\">\n                <h5 className=\"mb-0\">\n                  <h1 style={{ color: \"red\" }}>{props.current_user.name}</h1> Logged in through:{deviceOS}\n                </h5>\n                <p className=\"text-muted mb-0\">{props.current_user.email}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-lg-9 col-12\">\n          <div className=\"row mt-md-4 mt-0\">\n            <div className=\"col-xl-3 col-lg-3 col-md-6 col-12\">\n              <div className=\"box-dashboard\">\n                <div className=\"d-flex align-items-center justify-content-between\">\n                  <div className=\"\">\n                    <h5 className=\"text-muted mb-4\">Total Hours</h5>\n                    <h3 className=\"text-muted mb-0\"><CalculateRealTimePresence inTime={data.todayAttendance.inTime} outTime={data.todayAttendance.outTime} duration={data.todayAttendance.duration} /></h3>\n                  </div>\n                  <div className=\"text-danger\">\n                    <BiCoinStack />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-xl-3 col-lg-3 col-md-6 col-12\">\n              <div className=\"box-dashboard\">\n                <div className=\"d-flex align-items-center justify-content-between\">\n                  <div className=\"\">\n                    <h5 className=\"text-muted mb-4\"> Total Presence</h5>\n                    <h3 className=\"text-muted mb-0\">{data.total_present}</h3>\n                  </div>\n                  <div className=\"text-danger\">\n                    <GiBanknote />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-xl-3 col-lg-3 col-md-6 col-12\">\n              <div className=\"box-dashboard\">\n                <div className=\"d-flex align-items-center justify-content-between\">\n                  <div className=\"\">\n                    <h5 className=\"text-muted mb-4\">Total Leave</h5>\n                    <h3 className=\"text-muted mb-0\">\n                      {data.total_leaves.paid_leave}\n                      <span>-Paid</span>\n                    </h3>\n                    <h3 className=\"text-muted mb-0\">\n                      {\" \"}\n                      {data.total_leaves.unpaid_leave}\n                      <span>-UnPaid</span>\n                    </h3>\n                  </div>\n                  <div className=\"text-danger\">\n                    <GiBanknote />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-xl-3 col-lg-3 col-md-6 col-12\">\n              <div className=\"box-dashboard\">\n                <div className=\"d-flex align-items-center justify-content-between\">\n                  <div className=\"\">\n                    <h5 className=\"text-muted mb-4\"> Total Earning</h5>\n                    <h3 className=\"text-muted mb-0\">\n                      &#8377; {data.total_salary}{\" \"}\n                    </h3>\n                  </div>\n                  <div className=\"text-danger\">\n                    <BiCoinStack />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row mt-md-4 mt-0\">\n            <div className=\"col-xl-6 col-lg-6 col-12\">\n              <div className=\"chart\">\n                <h4>Attendance</h4>\n                <Chart\n                  options={barChartAttendance.options}\n                  series={barChartAttendance.series}\n                  type=\"bar\"\n                  width=\"100%\"\n                />\n              </div>\n            </div>\n            <div className=\"col-xl-6 col-lg-6 col-12\">\n              <div className=\"chart\">\n                <h4>Payroll monthly report</h4>\n                <Chart\n                  options={barChartSettings.options}\n                  series={barChartSettings.series}\n                  type=\"line\"\n                  width=\"100%\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-lg-3 col-12\">\n          <div className=\"timezone mt-md-4 mt-0\">\n            <div className=\"mb-0\">\n              <span className=\"date-section\">\n                Today: {date.toString().slice(0, 15)}\n              </span>\n              <p className=\"mb-0\">Time</p>\n              <span><Watch /></span>\n            </div>\n            <div className=\"text-left\">\n              <small>Get ready for an amazing workday!</small>\n              <br></br>\n              {data.todayAttendance.outTime && <><h4>Today you completed office Hours</h4></>}\n              {!data.isSubmitting ? (!data.todayAttendance.outTime &&\n                <button\n                  type=\"button\"\n                  className={\n                    data.todayAttendance.inTime\n                      ? data.todayAttendance.outTime\n                        ? \"btn btn-success\"\n                        : \"btn btn-danger\"\n                      : \"btn btn-success\"\n                  }\n                  onClick={hendelAttendence}\n                >\n                  {data.todayAttendance.inTime\n                    ? data.todayAttendance.outTime\n                      ? \"Check In\"\n                      : \"Check Out\"\n                    : \"Check In\"}\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  className={\n                    data.todayAttendance.inTime\n                      ? data.todayAttendance.outTime\n                        ? \"btn btn-success\"\n                        : \"btn btn-danger\"\n                      : \"btn btn-success\"\n                  }\n                  disabled\n                >\n                  <Spinner\n                    as=\"span\"\n                    animation=\"grow\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                  {data.todayAttendance.inTime\n                    ? data.todayAttendance.outTime\n                      ? \"Check In\"\n                      : \"Check Out\"\n                    : \"Check In\"}\n                </button>\n              )}\n              <small>Policy: Normal Attendance Policy </small>\n            </div>\n          </div>\n          {/* <div className=\"timezone mt-md-4 mt-0\">\n            <h5>\n              Holiday <small>Current Month</small>\n            </h5>\n          </div> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import { useEffect, useState } from \"react\";\n\nfunction Watch() {\n    const [value, setValue] = useState(new Date());\n    useEffect(() => {\n        const interval = setInterval(() => setValue(new Date()), 1000);\n\n        return () => {\n        clearInterval(interval);\n        };\n    }, []);\n    return  <span>{value.toLocaleTimeString()}</span>\n}\n\nfunction CalculateRealTimePresence(data) {\n    const [value1, setValue1] = useState(\"00:00\");\n    useEffect(() => {\n        const interval1 = setInterval(() => {\n        if (data.outTime) {\n            return setValue1(data.duration?data.duration:data.effective);\n        }\n        if (data.inTime) {\n            //check in time\n            let intime_h = new Date(data.inTime).getHours()\n            let intime_m = new Date(data.inTime).getMinutes()\n            let intime_in_minutes=0\n\n            //current time \n            let current_h = new Date().getHours();\n            let current_m = new Date().getMinutes();\n            let current_in_minutes = current_h * 60 + current_m;\n\n            let diff_min\n            if(current_h>=intime_h){\n                intime_in_minutes = intime_h * 60 + intime_m;\n                diff_min = (current_in_minutes - intime_in_minutes);\n            }else{\n                if((60 - intime_m) === 0){\n                    intime_in_minutes = (24-intime_h) * 60\n                }else{\n                    intime_in_minutes = (24-intime_h-1) * 60 + (60 - intime_m)\n                }\n                diff_min = (current_in_minutes + intime_in_minutes);\n            }\n\n            \n           \n            let duration_hours = `${(parseInt(diff_min / 60).toString().padStart(2, '0'))}:${\n            diff_min % 60 <= 9\n                ? `${(Math.round(diff_min % 60)).toString().padStart(2, '0')}`\n                : `${diff_min % 60}`\n            }`;\n            \n            return setValue1(duration_hours);\n        }\n        }, 1000);\n        return () => {\n        clearInterval(interval1);\n        };\n    }, [data]);\n\n    return <span>{value1}</span>\n}\n\nexport {CalculateRealTimePresence};\nexport default Watch;"],"names":["props","ip","setIP","useState","dispatch","useDispatch","socket","jwt","notify","data","useSelector","status","userDashboard","useEffect","getAll","async","res","fetch","method","mode","json","getData","deviceOS","userAgent","navigator","toLowerCase","includes","getDeviceOS","console","log","emit","email","current_user","department","designation","on","is_announ","setAnnouncement_New_notice","setTotalAnnoun","total_announ","is_policy","setPolicy_New_notice","setTotalPlicy","total_policy","hendelAttendence","debounce","setIsSubmitting","geolocation","getCurrentPosition","position","makeAttendence","latitude","coords","longitude","type","todayAttendance","outTime","inTime","barChartAttendance","options","chart","id","xaxis","categories","labels","formatter","val","yaxis","title","text","series","name","barChartSettings","attendance_chart","map","result","push","value","date","slice","salary_chart","month","Date","isLoading","_jsx","Loader","_jsxs","className","children","src","image_link","User","alt","style","width","height","color","CalculateRealTimePresence","duration","BiCoinStack","total_present","GiBanknote","total_leaves","paid_leave","unpaid_leave","total_salary","Chart","toString","Watch","_Fragment","isSubmitting","disabled","Spinner","as","animation","size","role","onClick","value1","setValue1","interval1","setInterval","effective","diff_min","intime_h","getHours","intime_m","getMinutes","intime_in_minutes","current_h","current_in_minutes","duration_hours","concat","parseInt","padStart","Math","round","clearInterval","setValue","interval","toLocaleTimeString"],"sourceRoot":""}