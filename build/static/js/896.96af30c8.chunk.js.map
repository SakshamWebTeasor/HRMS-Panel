{"version":3,"file":"static/js/896.96af30c8.chunk.js","mappings":"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","sources":["Pages/forgot.js","Pages/Login.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { firstvisit, goToLogin, passwordForget, passwordUpdate } from \"../store/auth\"\r\nimport \"./forgot.css\"\r\nimport TitleCase from \"../helper/title-case\"\r\nimport { Spinner } from \"react-bootstrap\"\r\nfunction Forgot() {\r\n  const dispatch = useDispatch()\r\n\r\n  const emailRef = useRef()\r\n  const otpRef = useRef()\r\n  const passRef = useRef()\r\n  const verifyPassRef = useRef()\r\n  const data = useSelector((status) => status.auth)\r\n  useEffect(()=>{\r\n    dispatch(firstvisit())\r\n  },[dispatch])\r\n\r\n  const hamdelemailverify = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"viryfy....:\", emailRef)\r\n    dispatch(passwordForget({ email: emailRef.current.value }))\r\n  };\r\n\r\n  const handalPasswordChange = async (e) => {\r\n    e.preventDefault()\r\n    console.log(\"passwordchange...\", emailRef)\r\n    if (passRef.current.value === verifyPassRef.current.value) {\r\n      console.log(\"match\")\r\n      dispatch(\r\n        passwordUpdate({\r\n          email: data.verify_email,\r\n          otp: otpRef.current.value,\r\n          password: passRef.current.value,\r\n        })\r\n      )\r\n    } else {\r\n      console.log(\"not match\");\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"login-page\">\r\n        <div className=\"row justify-content-center align-items-center m-2\">\r\n          <div className=\"col-lg-4 col-md-10 col-12\">\r\n            \r\n            {!data.is_passWord_changed ?\r\n                data.is_verify && !data.is_passWord_changed ? (\r\n                <form className=\"login\" onSubmit={handalPasswordChange}>\r\n                    <h4 className=\"mb-4\">Verify Password</h4>\r\n                    <div className=\"form-group mb-3\">\r\n                    <label>OTP</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control mb-2\"\r\n                        ref={otpRef}\r\n                        placeholder=\"Otp\"\r\n                        id=\"otp\"\r\n                        required\r\n                    />\r\n                    <span className=\"text-danger\">{data.errors.length>0?data.errors.map((err)=>err.param===\"otp\"?<TitleCase key={\"editerr-1\"} text={err.msg}/>:''):''}</span>\r\n                    <label>Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-control mb-2\"\r\n                        ref={passRef}\r\n                        placeholder=\"new password\"\r\n                        id=\"pass\"\r\n                        required\r\n                    />\r\n                    <span className=\"text-danger\">{data.errors.length>0?data.errors.map((err)=>err.param===\"password\"?<TitleCase key={\"editerr-1\"} text={err.msg}/>:''):''}</span>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        ref={verifyPassRef}\r\n                        placeholder=\"verify password\"\r\n                        id=\"verifypass\"\r\n                        required\r\n                    />\r\n                    </div>\r\n                    <div className=\"d-flex align-items-center justify-content-between\">\r\n                      {data.isSubmitting \r\n                      ? \r\n                          <Button variant=\"primary\"  className=\"me-3\">\r\n                          <Spinner \r\n                              as=\"span\"\r\n                              animation=\"grow\"\r\n                              size=\"sm\"\r\n                              role=\"status\"\r\n                              aria-hidden=\"true\"\r\n                          />\r\n                          &#10240;Verify Password\r\n                          </Button>\r\n                      :\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                        Verify Password\r\n                        </Button>\r\n                      }\r\n                      <p onClick={()=>dispatch(goToLogin(false))}><u>Go to Login</u></p>\r\n                    </div>\r\n                </form>\r\n                ) : (\r\n                <form className=\"login\" onSubmit={hamdelemailverify}>\r\n                    <h4 className=\"mb-4\">Forgot Password</h4>\r\n                    <div className=\"form-group mb-3\">\r\n                    <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        ref={emailRef}\r\n                        placeholder=\"Enter Email Address\"\r\n                        required\r\n                        id=\"verifyemail\"\r\n                    />\r\n                    <span className=\"text-danger\">{data.errors.length>0?data.errors.map((err)=>err.param===\"email\"?<TitleCase key={\"editerr-1\"} text={err.msg}/>:''):''}</span>\r\n                    </div>\r\n                    <div className=\"d-flex align-items-center justify-content-between\">\r\n                      {data.isSubmitting \r\n                        ? \r\n                            <Button variant=\"primary\"  className=\"me-3\">\r\n                            <Spinner \r\n                                as=\"span\"\r\n                                animation=\"grow\"\r\n                                size=\"sm\"\r\n                                role=\"status\"\r\n                                aria-hidden=\"true\"\r\n                            />\r\n                            &#10240;Get OTP\r\n                            </Button>\r\n                        :\r\n                          <Button variant=\"primary\" type=\"submit\">\r\n                          Get OTP\r\n                          </Button>\r\n                        }\r\n                        <p onClick={()=>dispatch(goToLogin(false))}><u>Go to Login</u></p>\r\n                    </div>\r\n                </form>\r\n            )\r\n            :\r\n            <div className=\"login\">\r\n                <h4>Password Changed Successfully ...</h4>\r\n                <p onClick={()=>dispatch(goToLogin(false))}><u>Go to Login</u></p>\r\n            </div>\r\n        }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Forgot;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { firstvisit, goToLogin, login } from \"../store/auth\";\r\nimport {Button, Spinner} from 'react-bootstrap'\r\nimport \"./login.css\";\r\nimport Forgot from \"./forgot\";\r\nimport TitleCase from \"../helper/title-case\";\r\nimport Logo from \"../assets/images/logo.png\";\r\nfunction Login() {\r\n    const dispatch = useDispatch();\r\n    const UserNameRef = useRef();\r\n    const passwordRef = useRef();\r\n    const data = useSelector(status => status.auth);\r\n    useEffect(()=>{dispatch(firstvisit())},[dispatch])\r\n//..login...//\r\n    const handellogin = (e)=>{\r\n        e.preventDefault()\r\n        dispatch(login({\r\n            userName :  UserNameRef.current.value,\r\n            password : passwordRef.current.value\r\n        }))\r\n    }\r\n\r\n    return (<>{!data.is_forgot_page?\r\n        <div className=\"login-page\">\r\n            <div className=\"row justify-content-center align-items-center m-2\">\r\n                <div className=\"col-lg-4 col-md-10 col-12\">\r\n                    \r\n                    <img className=\"img-fluid\" src={Logo} alt=\"Webteasor HRM\"/>\r\n                    \r\n                    <form className=\"login\" onSubmit={handellogin}>\r\n                        <h4 className=\"mb-4\">Login</h4>\r\n                        <div className=\"form-group mb-3\">\r\n                            <input type=\"type\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter Email ID or Mobile No.\"\r\n                            ref={UserNameRef}\r\n                            required\r\n                            />\r\n                            <span className=\"text-danger\">{data.errors.length>0?data.errors.map((err)=>err.param===\"email\"?<TitleCase key={\"editerr-1\"} text={err.msg}/>:''):''}</span>\r\n                        </div>\r\n                        <div className=\"form-group mb-3\">\r\n                            <input type=\"password\"\r\n                            className=\"form-control\" \r\n                            placeholder=\"Password\" \r\n                            ref={passwordRef}\r\n                            required\r\n                            />\r\n                            <span className=\"text-danger\">{data.errors.length>0?data.errors.map((err)=>err.param===\"password\"?<TitleCase key={\"editerr-1\"} text={err.msg}/>:''):''}</span>\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center justify-content-between\">\r\n                            {data.isSubmitting \r\n                                ? \r\n                                    <Button variant=\"danger\"  className=\"me-3\">\r\n                                    <Spinner \r\n                                        as=\"span\"\r\n                                        animation=\"grow\"\r\n                                        size=\"sm\"\r\n                                        role=\"status\"\r\n                                        aria-hidden=\"true\"\r\n                                    />\r\n                                    &#10240;Login\r\n                                    </Button>\r\n                                :\r\n                                <Button variant=\"danger\" type=\"submit\" className=\"me-3\">Login</Button>\r\n                            }\r\n                            <p onClick={()=>dispatch(goToLogin(true))}><u>Forget Password</u></p>\r\n                            {/* <Link to=\"/forgot\" className=\"text-danger\">Forgot Password</Link> */}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>:\r\n        <Forgot/>\r\n    }</>);\r\n}\r\n\r\nexport default Login;\r\n"],"names":["dispatch","useDispatch","emailRef","useRef","otpRef","passRef","verifyPassRef","data","useSelector","status","auth","useEffect","firstvisit","hamdelemailverify","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","preventDefault","console","log","passwordForget","email","current","value","stop","_x","apply","arguments","handalPasswordChange","_ref2","_callee2","_context2","passwordUpdate","verify_email","otp","password","_x2","_jsx","_Fragment","children","className","is_passWord_changed","_jsxs","onClick","goToLogin","is_verify","onSubmit","type","ref","placeholder","id","required","errors","length","map","err","param","TitleCase","text","msg","isSubmitting","Button","variant","Spinner","as","animation","size","role","UserNameRef","passwordRef","is_forgot_page","Forgot","src","Logo","alt","login","userName"],"sourceRoot":""}