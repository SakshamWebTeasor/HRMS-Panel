{"version":3,"file":"static/js/51.67b0ea7f.chunk.js","mappings":"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","sources":["Pages/admin/office-shift.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  addRecord,\n  getAll,\n  updateStatus,\n  getOne,\n  updateRecord,\n} from \"../../store/admin/timeSlot\";\nimport \"./designation.css\";\nimport { Spinner, Modal, Table, Button, Form } from \"react-bootstrap\";\nimport TitleCase from \"../../helper/title-case\";\nimport LocalTimeZone,{ LocaDateFormate } from \"../../helper/time-set-localtimezone\";\n\nfunction OfficeShift(props) {\n  const dispatch = useDispatch();\n  const jwt = props.jwt;\n\n  const shiftRef = useRef();\n  const lunchTimetRef = useRef();\n  const startRef = useRef();\n  const endRef = useRef();\n  const editEndRef = useRef();\n  const editShiftRef = useRef();\n  const editStartRef = useRef();\n  const editLunchTimetRef = useRef();\n\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    dispatch(getAll({ jwt }));\n  }, [dispatch, jwt]);\n  const data = useSelector((status) => status.timeSlot);\n  //...submit....//\n  const handelSubmit = (e) => {\n    e.preventDefault();\n    let start = new Date()\n    let x = (startRef.current.value).split(':')\n    start.setHours(parseInt(x[0]))\n    start.setMinutes(parseInt(x[1]))\n    start.setSeconds(0);\n    let end = new Date()\n    let y = (endRef.current.value).split(':')\n    end.setHours(parseInt(y[0]))\n    end.setMinutes(parseInt(y[1]))\n    end.setSeconds(0);\n    \n    dispatch(\n      addRecord({\n        jwt,\n        shift: shiftRef.current.value,\n        startTime: start,\n        endTime: end,\n        lunchTime: lunchTimetRef.current.value,\n      })\n    );\n    // shiftRef.current.value = \"\";\n    // startRef.current.value = null;\n    // endRef.current.value = null;\n    // lunchTimetRef.current.value = null;\n  };\n  //... Update submit ...//\n  useEffect(() => {\n    if (!data.isError) {\n      setShow(false);\n      shiftRef.current.value = \"\";\n      startRef.current.value = null;\n      endRef.current.value = null;\n      lunchTimetRef.current.value = null;\n    }\n  }, [data.isError]);\n  const update = (e) => {\n    e.preventDefault();\n    let start = new Date()\n    let x = (editStartRef.current.value).split(':')\n    start.setHours(parseInt(x[0]))\n    start.setMinutes(parseInt(x[1]))\n    start.setSeconds(0);\n    let end = new Date()\n    let y = (editEndRef.current.value).split(':')\n    end.setHours(parseInt(y[0]))\n    end.setMinutes(parseInt(y[1]))\n    end.setSeconds(0);\n\n    console.log(start, end)\n    dispatch(\n      updateRecord({\n        jwt,\n        id: data.singledata[0]._id,\n        shift: editShiftRef.current.value,\n        startTime: start,\n        endTime: end,\n        lunchTime: editLunchTimetRef.current.value,\n      })\n    );\n  };\n  //edite...//\n  const handleClose = () => {\n    setShow(false);\n  };\n  const handleShow = (_id) => {\n    setShow(true);\n    dispatch(getOne(_id));\n  };\n\n  return (\n    <>\n      <div className=\"page-section p-4\">\n        <div className=\"row\">\n          <div className=\"col-xl-4 col-lg-5 col-md-12 col-12\">\n            <div className=\"add-departmen chart\">\n              <h4 className=\"mb-4\">Add New Office Shift</h4>\n              <Form onSubmit={handelSubmit}>\n                <Form.Group className=\"my-3\">\n                  <Form.Label>\n                    Shift <span className=\"text-danger\">*</span>{\" \"}\n                  </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    aria-label=\"Default select example\"\n                    placeholder=\"Shift Name\"\n                    ref={shiftRef}\n                    required\n                  />\n                    \n                  <span className=\"text-danger\">\n                    {data.errors.length > 0\n                      ? data.errors.map((err) =>\n                          err.param === \"shift\" ? (\n                            <TitleCase key=\"err-1\" text={err.msg} />\n                          ) : (\n                            \"\"\n                          )\n                        )\n                      : \"\"}\n                  </span>\n                </Form.Group>\n                <Form.Group\n                  className=\"my-3\"\n                  controlId=\"exampleForm.ControlInput1\"\n                >\n                  <Form.Label>\n                    Office Time <span className=\"text-danger\">*</span>{\" \"}\n                  </Form.Label>\n                  <Form.Control\n                    type=\"time\"\n                    ref={startRef}\n                    placeholder=\"Title\"\n                    required\n                  />\n                  <span className=\"text-danger\">\n                    {data.errors.length > 0\n                      ? data.errors.map((err) =>\n                          err.param === \"time_in\" ? (\n                            <TitleCase key=\"err-2\" text={err.msg} />\n                          ) : (\n                            \"\"\n                          )\n                        )\n                      : \"\"}\n                  </span>\n                  <p className=\"pt-2\">To</p>\n                  <Form.Control\n                    type=\"time\"\n                    ref={endRef}\n                    placeholder=\"Name\"\n                    required\n                  />\n                  <span className=\"text-danger\">\n                    {data.errors.length > 0\n                      ? data.errors.map((err) =>\n                          err.param === \"time_out\" ? (\n                            <TitleCase key=\"err-3\" text={err.msg} />\n                          ) : (\n                            \"\"\n                          )\n                        )\n                      : \"\"}\n                  </span>\n                </Form.Group>\n                <Form.Group\n                  className=\"my-3\"\n                  controlId=\"exampleForm.ControlInput1\"\n                >\n                  <Form.Label>\n                    Lunch Duration(HH:MM) <span className=\"text-danger\">*</span>{\" \"}\n                  </Form.Label>\n                  <Form.Control\n                    type=\"time\"\n                    ref={lunchTimetRef}\n                    placeholder=\"enter time\"\n                    required\n                  />\n                  <span className=\"text-danger\">\n                    {data.errors.length > 0\n                      ? data.errors.map((err) =>\n                          err.param === \"lunch_time\" ? (\n                            <TitleCase key=\"err-4\" text={err.msg} />\n                          ) : (\n                            \"\"\n                          )\n                        )\n                      : \"\"}\n                  </span>\n                </Form.Group>\n                {data.isSubmitting ? (\n                  <Button variant=\"primary\" className=\"mt-4\">\n                    <Spinner\n                      as=\"span\"\n                      animation=\"grow\"\n                      size=\"sm\"\n                      role=\"status\"\n                      aria-hidden=\"true\"\n                    />\n                    &#10240;Save\n                  </Button>\n                ) : (\n                  <Button type=\"submit\" variant=\"danger\" className=\"mt-4\">\n                    Save\n                  </Button>\n                )}\n              </Form>\n            </div>\n          </div>\n          <div className=\"col-xl-8 col-lg-7 col-md-12 col-12\">\n            <div className=\"add-departmen chart\">\n              <div className=\"d-flex justify-content-between align-items-center\">\n                <h4 className=\"mb-0\">List All Office Shift</h4>\n              </div>\n              <div className=\"responsive mt-4\">\n                <Table striped bordered hover>\n                  <thead>\n                    <tr>\n                      <th className=\"text-white\">S.No.</th>\n                      <th className=\"text-white\">Shift</th>\n                      <th className=\"text-white\">\n                        Office&#10240;Timing\n                      </th>\n                      <th className=\"text-white\">\n                        Lunch&#10240;Time\n                      </th>\n                      <th className=\"text-white\">Created&#10240;At</th>\n                      <th className=\"text-white\">Status</th>\n                      <th className=\"text-white\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {data.isLoading ? (\n                      <tr key={0} className=\"text-center\">\n                        <td colSpan={7}>Loading...</td>\n                      </tr>\n                    ) : data.allData.length > 0 ? (\n                      data.allData.map((result, index) => {\n                        return (\n                        <tr key={index}>\n                          <td>{index + 1}</td>\n                          <td>\n                            <TitleCase text={result.shift} />\n                          </td>\n                          <td>\n                            <LocalTimeZone time = {result.time_in}/>\n                            &#10240;-&#10240;\n                            <LocalTimeZone time = {result.time_out}/>\n                          </td>\n                          <td>{result.lunch_time}</td>\n                          <td><LocaDateFormate date_arg = {result.created_at}/></td>\n                          <td>\n                            <p\n                              className={\n                                result.active ? \"text-success\" : \"text-danger\"\n                              }\n                            >\n                              {result.active ? \"Active\" : \"Block\"}\n                            </p>\n                          </td>\n                          <td className=\"d-flex align-items-center\">\n                            <Button\n                              onClick={() => {\n                                handleShow(result._id);\n                              }}\n                              className=\"btn btn-warning text-white\"\n                            >\n                              Edit\n                            </Button>\n                            {!result.is_deleted && (\n                              <Button\n                                onClick={() =>\n                                  dispatch(\n                                    updateStatus({\n                                      jwt,\n                                      id: result._id,\n                                      active: !result.active,\n                                      index,\n                                    })\n                                  )\n                                }\n                                className={\n                                  !result.active\n                                    ? \"btn btn-primary text-white ms-2\"\n                                    : \"btn btn-danger text-white ms-2\"\n                                }\n                                variant={!result.active ? \"primary\" : \"danger\"}\n                              >\n                                {!result.active ? \"Active\" : \"Block\"}\n                              </Button>\n                            )}\n                          </td>\n                        </tr>\n                      )})\n                    ) : (\n                      <tr key={0}>\n                        <td colSpan={8} className=\"text-center\">\n                          No Data Found\n                        </td>\n                      </tr>\n                    )}\n                  </tbody>\n                </Table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Update Office Timeing </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={update}>\n            <Form.Group className=\"my-3\">\n              <Form.Label>\n                Shift <span className=\"text-danger\">*</span>{\" \"}\n              </Form.Label>\n              <Form.Control\n                    type=\"text\"\n                    aria-label=\"Default select example\"\n                    placeholder=\"Shift Name\"\n                ref={editShiftRef}\n                defaultValue={\n                  data.singledata.length > 0 ? data.singledata[0].shift : \"\"\n                }\n                required\n              />\n               \n              <span className=\"text-danger\">\n                {data.editErrors.length > 0\n                  ? data.editErrors.map((err) =>\n                      err.param === \"shift\" ? (\n                        <TitleCase key=\"editerr-1\" text={err.msg} />\n                      ) : (\n                        \"\"\n                      )\n                    )\n                  : \"\"}\n              </span>\n            </Form.Group>\n            <Form.Group className=\"my-3\" controlId=\"exampleForm.ControlInput1\">\n              <Form.Label>\n                Office Time <span className=\"text-danger\">*</span>{\" \"}\n              </Form.Label>\n              <Form.Control\n                type=\"time\"\n                ref={editStartRef}\n                defaultValue={\n                  data.singledata.length > 0 ? LocalTimeZone({time: data.singledata[0].time_in}) : \"\"\n                }\n                placeholder=\"Name\"\n                required\n              />\n              <span className=\"text-danger\">\n                {data.editErrors.length > 0\n                  ? data.editErrors.map((err) =>\n                      err.param === \"time_in\" ? (\n                        <TitleCase key=\"editerr-2\" text={err.msg} />\n                      ) : (\n                        \"\"\n                      )\n                    )\n                  : \"\"}\n              </span>\n              <p className=\"pt-2\">To</p>\n              <Form.Control\n                type=\"time\"\n                ref={editEndRef}\n                defaultValue={\n                  data.singledata.length > 0 ? LocalTimeZone({time: data.singledata[0].time_out}) : \"\"\n                }\n                placeholder=\"Name\"\n                required\n              />\n              <span className=\"text-danger\">\n                {data.editErrors.length > 0\n                  ? data.editErrors.map((err) =>\n                      err.param === \"time_out\" ? (\n                        <TitleCase key=\"editerr-3\" text={err.msg} />\n                      ) : (\n                        \"\"\n                      )\n                    )\n                  : \"\"}\n              </span>\n            </Form.Group>\n            <Form.Group className=\"my-3\" controlId=\"exampleForm.ControlInput1\">\n              <Form.Label>\n                Lunch Time <span className=\"text-danger\">*</span>{\" \"}\n              </Form.Label>\n              <Form.Control\n                type=\"time\"\n                defaultValue={\n                  data.singledata.length > 0\n                    ? data.singledata[0].lunch_time\n                    : \"\"\n                }\n                ref={editLunchTimetRef}\n                placeholder=\"enter time\"\n                required\n              />\n              <span className=\"text-danger\">\n                {data.editErrors.length > 0\n                  ? data.editErrors.map((err) =>\n                      err.param === \"lunch_time\" ? (\n                        <TitleCase key=\"editerr-4\" text={err.msg} />\n                      ) : (\n                        \"\"\n                      )\n                    )\n                  : \"\"}\n              </span>\n            </Form.Group>\n            {data.isEditSubmitting ? (\n              <Button variant=\"danger\" className=\"mt-4\">\n                <Spinner\n                  as=\"span\"\n                  animation=\"grow\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                />\n                &#10240;Update\n              </Button>\n            ) : (\n              <Button type=\"submit\" variant=\"danger\" className=\"mt-4\">\n                Update\n              </Button>\n            )}\n          </Form>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n\nexport default OfficeShift;\n"],"names":["props","dispatch","useDispatch","jwt","shiftRef","useRef","lunchTimetRef","startRef","endRef","editEndRef","editShiftRef","editStartRef","editLunchTimetRef","show","setShow","useState","useEffect","getAll","data","useSelector","status","timeSlot","isError","current","value","_jsxs","_Fragment","children","_jsx","className","Form","onSubmit","e","preventDefault","start","Date","x","split","setHours","parseInt","setMinutes","setSeconds","end","y","addRecord","shift","startTime","endTime","lunchTime","Group","Label","Control","type","placeholder","ref","required","errors","length","map","err","param","TitleCase","text","msg","controlId","isSubmitting","Button","variant","Spinner","as","animation","size","role","Table","striped","bordered","hover","isLoading","colSpan","allData","result","index","LocalTimeZone","time","time_in","time_out","lunch_time","LocaDateFormate","date_arg","created_at","active","onClick","_id","getOne","is_deleted","updateStatus","id","Modal","onHide","handleClose","Header","closeButton","Title","Body","console","log","updateRecord","singledata","defaultValue","editErrors","isEditSubmitting"],"sourceRoot":""}