{"version":3,"file":"static/js/592.b2532612.chunk.js","mappings":"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","sources":["Pages/admin/laave-type.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addRecord, getOne, getAll, updateRecord, deleteRecord } from \"../../store/admin/leave-type\";\r\nimport \"./designation.css\";\r\nimport { Spinner, Modal, Table, Button, Form } from \"react-bootstrap\";\r\nimport TitleCase from \"../../helper/title-case\";\r\n\r\nfunction LeaveType(props) {\r\n  const dispatch = useDispatch();\r\n  const jwt = props.jwt;\r\n\r\n  const nameref = useRef();\r\n  const noOfLeaveRef = useRef();\r\n  const typeRef = useRef();\r\n  const editname = useRef();\r\n  const edittypeRef = useRef();\r\n  const editnoOfLeaveRef = useRef();\r\n  const [id, setId] = useState();\r\n  const [show, setShow] = useState(false);\r\n  const [showDelete, setShowDelete] = useState(false);\r\n  const data = useSelector((status) => status.leaveType);\r\n  useEffect(() => {\r\n    dispatch(getAll({ jwt }));\r\n  }, [dispatch, jwt]);\r\n\r\n  //... create leave....//\r\n  const handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      addRecord({\r\n        jwt,\r\n        name: nameref.current.value,\r\n        type: typeRef.current.value,\r\n        noOfLeaves: noOfLeaveRef.current.value,\r\n      })\r\n    );\r\n    \r\n  };\r\n  //... update leave ....//\r\n  useEffect(() => {\r\n    if (!data.isError) {\r\n      setShow(false);\r\n      nameref.current.value = \"\";\r\n      typeRef.current.value = \"\";\r\n      noOfLeaveRef.current.value = null;\r\n      }\r\n  }, [data.isError]);\r\n\r\n  const update = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateRecord({\r\n        jwt,\r\n        id: data.singledata[0]._id,\r\n        name: editname.current.value,\r\n        type: edittypeRef.current.value,\r\n        noOfLeaves: editnoOfLeaveRef.current.value,\r\n      })\r\n    );\r\n  };\r\n\r\n  //delete.....\r\n  const handeldelete = () => {\r\n    dispatch(\r\n      deleteRecord({\r\n        jwt,\r\n        id,\r\n        pageno:\r\n          data.allData.length === 1 && data.currentpage > 1\r\n            ? Number(data.currentpage) - 1\r\n            : data.currentpage,\r\n      })\r\n    );\r\n  };\r\n\r\n  //edite...//\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n  const handleShow = (_id) => {\r\n    setShow(true);\r\n    dispatch(getOne(_id));\r\n  };\r\n //...delete..//\r\n const handleDeleteClose = () => {\r\n  setShowDelete(false);\r\n };\r\n\r\n const handleDeleteShow = (id) => {\r\n  setShowDelete(true);\r\n  setId(id);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"page-section p-4\">\r\n        <div className=\"row\">\r\n          <div className=\"col-xl-4 col-lg-5 col-md-12 col-12\">\r\n            <div className=\"add-departmen chart\">\r\n              <h4 className=\"mb-4\">Add New Leave Type</h4>\r\n              <Form onSubmit={handelSubmit}>\r\n                <Form.Group className=\"my-3\">\r\n                  <Form.Label>\r\n                    Leave Title <span className=\"text-danger\">*</span>{\" \"}\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    name=\"title\"\r\n                    type=\"text\"\r\n                    placeholder=\"Title\"\r\n                    ref={nameref}\r\n                    required\r\n                  />\r\n                  <span className=\"text-danger\">\r\n                    {data.errors.length > 0\r\n                      ? data.errors.map((err) =>\r\n                          err.param === \"name\" ? (\r\n                            <TitleCase key=\"editerr-1\" text={err.msg} />\r\n                          ) : (\r\n                            \"\"\r\n                          )\r\n                        )\r\n                      : \"\"}\r\n                  </span>\r\n                </Form.Group>\r\n                <Form.Group\r\n                  className=\"my-3\"\r\n                  controlId=\"exampleForm.ControlInput1\"\r\n                >\r\n                  <Form.Label>\r\n                    Leave Type <span className=\"text-danger\">*</span>{\" \"}\r\n                  </Form.Label>\r\n                  <Form.Select\r\n                    aria-label=\"Default select example\"\r\n                    ref={typeRef}\r\n                    required\r\n                  >\r\n                    <option value={\"\"}>select</option>\r\n                    <option value=\"paid\">Paid</option>\r\n                    <option value=\"unpaid\">Unpaid</option>\r\n                  </Form.Select>\r\n                  <span className=\"text-danger\">\r\n                    {data.errors.length > 0\r\n                      ? data.errors.map((err) =>\r\n                          err.param === \"type\" ? (\r\n                            <TitleCase key=\"editerr-2\" text={err.msg} />\r\n                          ) : (\r\n                            \"\"\r\n                          )\r\n                        )\r\n                      : \"\"}\r\n                  </span>\r\n                </Form.Group>\r\n                <Form.Group\r\n                  className=\"my-3\"\r\n                  controlId=\"exampleForm.ControlInput1\"\r\n                >\r\n                  <Form.Label>\r\n                    Total Days <span className=\"text-danger\">*</span>{\" \"}\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    ref={noOfLeaveRef}\r\n                    min={1}\r\n                    max={365}\r\n                    placeholder=\"Days\"\r\n                    required\r\n                  />\r\n                  <span className=\"text-danger\">\r\n                    {data.errors.length > 0\r\n                      ? data.errors.map((err) =>\r\n                          err.param === \"total\" ? (\r\n                            <TitleCase key=\"editerr-3\" text={err.msg} />\r\n                          ) : (\r\n                            \"\"\r\n                          )\r\n                        )\r\n                      : \"\"}\r\n                  </span>\r\n                </Form.Group>\r\n                {data.isSubmitting ? (\r\n                  <Button variant=\"primary\" className=\"mt-4\">\r\n                    <Spinner\r\n                      as=\"span\"\r\n                      animation=\"grow\"\r\n                      size=\"sm\"\r\n                      role=\"status\"\r\n                      aria-hidden=\"true\"\r\n                    />\r\n                    &#10240;Save\r\n                  </Button>\r\n                ) : (\r\n                  <Button type=\"submit\" variant=\"danger\" className=\"mt-4\">\r\n                    Save\r\n                  </Button>\r\n                )}\r\n              </Form>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-xl-8 col-lg-7 col-md-12 col-12\">\r\n            <div className=\"add-departmen chart\">\r\n              <div className=\"d-flex justify-content-between align-items-center\">\r\n                <h4 className=\"mb-0\">List All Leave Types</h4>\r\n              </div>\r\n\r\n              <div className=\"responsive mt-4\">\r\n                <Table striped bordered hover>\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"text-white\">S.No.</th>\r\n                      <th className=\"text-white\">Name</th>\r\n                      <th className=\"text-white\">Type</th>\r\n                      <th className=\"text-white\">Total&#10240;Days</th>\r\n                      <th className=\"text-white\">Action</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {data.isLoading ? (\r\n                      <tr key={0} className=\"text-center\">\r\n                        <td colSpan={6}>Loading...</td>\r\n                      </tr>\r\n                    ) : data.allData.length > 0 ? (\r\n                      data.allData.map((result, index) => (\r\n                        <tr key={index}>\r\n                          <td>{index + 1}</td>\r\n                          <td>\r\n                            {result.name.charAt(0).toUpperCase() +\r\n                              result.name.slice(1)}\r\n                          </td>\r\n                          <td>\r\n                            {result.type.charAt(0).toUpperCase() +\r\n                              result.type.slice(1)}\r\n                          </td>\r\n                          <td>{result.total}</td>\r\n                          <td className=\"d-lg-block d-flex align-items-center\">\r\n                            <Button\r\n                              onClick={() => {\r\n                                handleShow(result._id);\r\n                              }}\r\n                              className=\"btn btn-warning text-white\"\r\n                            >\r\n                              Edit\r\n                            </Button>\r\n                            <Button\r\n                              variant=\"danger\"\r\n                              className=\"ms-2\"\r\n                              onClick={() => {\r\n                                handleDeleteShow(result._id);\r\n                              }}\r\n                            >\r\n                              Delete\r\n                            </Button>\r\n                          </td>\r\n                          \r\n                        </tr>\r\n                      ))\r\n                    ) : (\r\n                      <tr key={0}>\r\n                        <td colSpan={6} className=\"text-center\">\r\n                          No Data Found\r\n                        </td>\r\n                      </tr>\r\n                    )}\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Update Leave Type </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={update}>\r\n            <Form.Group className=\"my-3\">\r\n              <Form.Label>\r\n                Leave Title <span className=\"text-danger\">*</span>{\" \"}\r\n              </Form.Label>\r\n              <Form.Control\r\n                aria-label=\"Default select example\"\r\n                ref={editname}\r\n                placeholder=\"Title\"\r\n                defaultValue={\r\n                  data.singledata.length > 0 ? data.singledata[0].name : \"\"\r\n                }\r\n                required\r\n              ></Form.Control>\r\n              <span className=\"text-danger\">\r\n                {data.editErrors.length > 0\r\n                  ? data.editErrors.map((err) =>\r\n                      err.param === \"name\" ? (\r\n                        <TitleCase key=\"editerr-1\" text={err.msg} />\r\n                      ) : (\r\n                        \"\"\r\n                      )\r\n                    )\r\n                  : \"\"}\r\n              </span>\r\n            </Form.Group>\r\n            <Form.Group className=\"my-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>\r\n                Leave Type <span className=\"text-danger\">*</span>{\" \"}\r\n              </Form.Label>\r\n              <Form.Select\r\n                aria-label=\"Default select example\"\r\n                ref={edittypeRef}\r\n                required\r\n                defaultValue={\r\n                  data.singledata.length > 0 ? data.singledata[0].type : \"\"\r\n                }\r\n              >\r\n                <option value={\"\"}>select</option>\r\n                <option value=\"paid\">Paid</option>\r\n                <option value=\"unpaid\">Unpaid</option>\r\n              </Form.Select>\r\n              <span className=\"text-danger\">\r\n                {data.editErrors.length > 0\r\n                  ? data.editErrors.map((err) =>\r\n                      err.param === \"type\" ? (\r\n                        <TitleCase key=\"editerr-2\" text={err.msg} />\r\n                      ) : (\r\n                        \"\"\r\n                      )\r\n                    )\r\n                  : \"\"}\r\n              </span>\r\n            </Form.Group>\r\n            <Form.Group className=\"my-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>\r\n                Total Days<span className=\"text-danger\">*</span>{\" \"}\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                ref={editnoOfLeaveRef}\r\n                defaultValue={\r\n                  data.singledata.length > 0 ? data.singledata[0].total : \"\"\r\n                }\r\n                min={1}\r\n                max={365}\r\n                required\r\n                placeholder=\"Days\"\r\n              />\r\n              <span className=\"text-danger\">\r\n                {data.editErrors.length > 0\r\n                  ? data.editErrors.map((err) =>\r\n                      err.param === \"total\" ? (\r\n                        <TitleCase key=\"editerr-3\" text={err.msg} />\r\n                      ) : (\r\n                        \"\"\r\n                      )\r\n                    )\r\n                  : \"\"}\r\n              </span>\r\n            </Form.Group>\r\n            {data.isEditSubmitting ? (\r\n              <Button variant=\"danger\" className=\"mt-4\">\r\n                <Spinner\r\n                  as=\"span\"\r\n                  animation=\"grow\"\r\n                  size=\"sm\"\r\n                  role=\"status\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n                &#10240;Update\r\n              </Button>\r\n            ) : (\r\n              <Button type=\"submit\" variant=\"danger\" className=\"mt-4\">\r\n                Update\r\n              </Button>\r\n            )}\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n      <Modal show={showDelete} onHide={handleDeleteClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Do you really want to delete?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"danger\"\r\n            onClick={() => {\r\n              handleDeleteClose();\r\n              handeldelete();\r\n            }}\r\n          >\r\n            Yes\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleDeleteClose}>\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LeaveType;\r\n"],"names":["props","dispatch","useDispatch","jwt","nameref","useRef","noOfLeaveRef","typeRef","editname","edittypeRef","editnoOfLeaveRef","_useState","useState","_useState2","_slicedToArray","id","setId","_useState3","_useState4","show","setShow","_useState5","_useState6","showDelete","setShowDelete","data","useSelector","status","leaveType","useEffect","getAll","isError","current","value","handleDeleteClose","_jsxs","_Fragment","children","_jsx","className","Form","onSubmit","e","preventDefault","addRecord","name","type","noOfLeaves","Group","Label","Control","placeholder","ref","required","errors","length","map","err","param","TitleCase","text","msg","controlId","Select","min","max","isSubmitting","Button","variant","Spinner","as","animation","size","role","Table","striped","bordered","hover","isLoading","colSpan","allData","result","index","charAt","toUpperCase","slice","total","onClick","_id","getOne","handleDeleteShow","Modal","onHide","Header","closeButton","Title","Body","updateRecord","singledata","defaultValue","editErrors","isEditSubmitting","Footer","deleteRecord","pageno","currentpage","Number"],"sourceRoot":""}