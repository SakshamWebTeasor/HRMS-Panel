{"version":3,"file":"static/js/302.981fe448.chunk.js","mappings":"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","sources":["Pages/admin/components/employee-details.js","Pages/admin/employees.js","helper/readMoreReadLess.js","helper/util.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAll, setIsSubmitting, addRecord, updateRecord, addDocumnets, addEmail } from \"../../../store/admin/employee-details\";\nimport { Tab, Tabs, Table, Button, Modal, Form,Spinner } from \"react-bootstrap\";\nimport Loader from \"../../../Components/loader/index\";\nimport Verdi from \"../../../assets/images/no-image.png\";\nimport { CiEdit } from \"react-icons/ci\"\nimport TitleCase from \"../../../helper/title-case\";\nimport ReadMoreReadLess from \"../../../helper/readMoreReadLess\";\nimport LocalTimeZone, { LocaDateFormate } from \"../../../helper/time-set-localtimezone\";\nimport CalculationLate, { CalculateEarlyLeave } from \"../../../helper/util\";\n\nfunction EmployeeDetails(props) {\n  const dispatch = useDispatch();\n  const jwt = props.jwt;\n  const id = props.id;\n  const notify = props.notify\n  const is_deleted = props.is_deleted\n\n  const [isEdit, setIsEdit]= useState(false)\n  const [panEdit, setPanEdit] = useState(false)\n  const [adharEdit, setAdharEdit] = useState(false)\n  const [show, setShow]=useState(false)\n  const [emailShow, setEmailShow] = useState(false)\n  const [selectedFile, setSelectedFile] = useState();\n  const [preview, setPreview] = useState();\n  const ifscRef = useRef();\n  const bankNameRef = useRef();\n  const branchNameRef = useRef();\n  const fileRef = useRef();\n  const accountNoRef = useRef();\n  const accountHolderRef = useRef();\n\n  const panRef = useRef();\n  const panNumberRef = useRef();\n  const adharRef = useRef();\n  const adharNumberRef = useRef();\n\n  const emailRef = useRef();\n  const data = useSelector((status) => status.employeeDetails)\n\n  useEffect(() => {\n    dispatch(getAll({ jwt, id }));\n  }, [dispatch, jwt, id]);\n\n//....add company email...//\n  const handelemailSubmit = async(e)=>{\n    e.preventDefault();\n    if(!emailRef.current.value)\n      return notify(\"All Fields are Required !\", true)\n    await dispatch(setIsSubmitting(true))\n    dispatch(addEmail({id, jwt, email : emailRef.current.value}))\n    await dispatch(setIsSubmitting(false))\n    setEmailShow(false)\n  }\n//....add Pan Card....//\n  const handelPanSubmit = async(e)=>{\n    e.preventDefault();\n    if(panNumberRef.current.value <= 0)\n      return notify(\"Enter valid Number !\", true)\n    if(!panNumberRef.current.value){\n      return notify(\"All Fields are Required !\", true)\n    }\n    if(!panEdit && !panRef.current.files[0])\n      return notify(\"All Fields are Required !\", true)\n    await dispatch(setIsSubmitting(true))\n    if (!panEdit) {\n    //\"pan create\"//\n      await dispatch(addDocumnets({\n        jwt,\n        id,\n        pan:panRef.current.files[0],\n        pan_number : panNumberRef.current.value.trim(),\n        panEdit,\n        ispan:true\n      }))\n    } else {\n    //'pan update'//\n      await dispatch(addDocumnets({\n        jwt,\n        id,\n        old_pan_path:data.employeeDetails.panCard_path.trim(),\n        old_pan_link:data.employeeDetails.panCard_link.trim(),\n        pan:panRef.current.files[0],\n        pan_number : panNumberRef.current.value.trim(),\n        panEdit,\n        ispan:true\n      }))\n    }\n    await dispatch(setIsSubmitting(false));\n    setPanEdit(false)\n  }\n//..... add adhar Card ....//\n  const handelAdharSubmit = async(e)=>{\n    e.preventDefault();\n    if(adharNumberRef.current.value <= 0)\n      return notify(\"Enter valid Number !\", true)\n    if(!adharNumberRef.current.value.trim )\n      return notify('All Fields are Required !', true);\n    if(!adharEdit && !adharRef.current.files[0])\n      return notify('All Fields are Required !', true);\n    await dispatch(setIsSubmitting(true))\n    if (!adharEdit) {\n    //\"adhar create\"//\n      await dispatch(addDocumnets({\n        jwt,\n        id,\n        adhar:adharRef.current.files[0],\n        adhar_number : adharNumberRef.current.value.trim(),\n        adharEdit,\n        ispan:false\n      }))\n    } else {\n    //'adhar update'//\n      await dispatch(addDocumnets({\n        jwt,\n        id,\n        old_adhar_path:data.employeeDetails.aadharCard_path.trim(),\n        old_adhar_link:data.employeeDetails.aadharCard_link.trim(),\n        adhar:adharRef.current.files[0],\n        adhar_number : adharNumberRef.current.value.trim(),\n        adharEdit,\n        ispan:false\n      }))\n    }\n    await dispatch(setIsSubmitting(false));\n    setAdharEdit(false)\n  }\n\n//....add Account....//\n  const handelSubmit = async(e)=>{\n    e.preventDefault();\n    if(accountNoRef.current.value <= 0)\n      return notify(\"Enter Valid Number !\", true)\n    if(!accountHolderRef.current.value || !accountNoRef.current.value || !branchNameRef.current.value || !bankNameRef.current.value || !ifscRef.current.value || !fileRef.current.files[0])\n      return notify('All Fields are Required !', true)\n    await dispatch(setIsSubmitting(true))\n    if (!isEdit) {\n      //\"Account create\"//\n        await dispatch(addRecord({\n            jwt,\n            id,\n            accountHolder : accountHolderRef.current.value.trim(),\n            accountNo : accountNoRef.current.value.trim(),\n            branchName : branchNameRef.current.value.trim(),\n            bankName : bankNameRef.current.value.trim(),\n            ifscCode : ifscRef.current.value.trim(),\n            file : fileRef.current.files[0]\n        }))\n    }else{\n      //\"Account update\"//\n        await dispatch(updateRecord({\n            jwt,\n            id:data.accountDetails._id,\n            oldFilePath :  data.accountDetails.file_path.trim(),\n            oldFileLink :  data.accountDetails.file_link.trim(),\n            userid : id,\n            accountHolder : accountHolderRef.current.value.trim(),\n            accountNo : accountNoRef.current.value.trim(),\n            branchName : branchNameRef.current.value.trim(),\n            bankName : bankNameRef.current.value.trim(),\n            ifscCode : ifscRef.current.value.trim(),\n            file : fileRef.current.files[0]\n        }))\n    }\n    await dispatch(setIsSubmitting(false));\n    setIsEdit(false)\n    setShow(false)\n  }\n  const handleShow = (isedit = false)=>{\n    setShow(true)\n    if(isedit)\n      setIsEdit(true)\n  }\n  const handleClose = ()=>{\n    setIsEdit(false)\n    setShow(false)\n  }\n  const handelNumberValue = (e)=>{\n    if(e.key === \"e\"){\n      accountNoRef.current.value = null;\n      return;\n    }\n}\n  \n  useEffect(() => {\n    if (!selectedFile) {\n      setPreview(undefined);\n      return;\n    }\n\n    const objectUrl = URL.createObjectURL(selectedFile);\n    setPreview(objectUrl);\n\n    // free memory when ever this component is unmounted\n    return () => URL.revokeObjectURL(objectUrl);\n  }, [selectedFile]);\n\n  const onSelectFile = (e) => {\n    if (!e.target.files || e.target.files.length === 0) {\n      setSelectedFile(undefined);\n      return;\n    }\n    // I've kept this example simple by using the first image instead of multiple\n    setSelectedFile(e.target.files[0]);\n  };\n  \n  if (data.isLoading) \n    return <Loader />;\n\n  return (\n    <>\n      <div className=\"page-section mt-0 py-4\">\n        <div className=\"employees chart page_bg p-0 mb-4\">\n          <div className=\"profile-section p-4\">\n            <div className=\"row align-items-center justify-content-center\">\n              <div className=\"col-lg-3 col-md-3 col-12\">\n                <div className=\"profile-box mt-4\">\n                  <img\n                    src={\n                      data.employeeDetails.image_link\n                        ? data.employeeDetails.image_link\n                        : Verdi\n                    }\n                    alt=\"Verdi\"\n                  />\n                </div>\n              </div>\n              <div className=\"col-lg-9 col-md-9 col-12\">\n                <div className=\"profile-data\">\n                  <h3><TitleCase text={data.employeeDetails.name}/></h3>\n                  <small><TitleCase text={data.employeeDetails.designation.name}/></small>\n                  <p>\n                    <ReadMoreReadLess text={data.employeeDetails.designation.description} limit={100}/>\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"chart\">\n          <Tabs\n            defaultActiveKey=\"home\"\n            id=\"uncontrolled-tab-example\"\n            className=\"mb-3\"\n          >\n            <Tab eventKey=\"home\" title=\"Home\">\n              <h4>Basic Information</h4>\n              <div className=\"row mt-4\">\n                <div className=\"col-lg-3 col-md-4 col-6\">\n                  <div className=\"basic_page_details\">\n                    <h6>Name</h6>\n                    <p><TitleCase text={data.employeeDetails.name}/></p>\n                  </div>\n                </div>\n                <div className=\"col-lg-3 col-md-4 col-6\">\n                  <div className=\"basic_page_details\">\n                    <h6>Company Email</h6>\n                    {data.employeeDetails.company_email?<p>{data.employeeDetails.company_email}</p>:(!is_deleted &&<Button onClick={()=>{setEmailShow(true)}}>+Add email</Button>)}\n                  </div>\n                </div>\n                <div className=\"col-lg-3 col-md-4 col-6\">\n                  <div className=\"basic_page_details\">\n                    <h6>Gender</h6>\n                    <p>\n                      {data.employeeDetails.gender === \"M\"\n                        ? data.employeeDetails.gender === \"F\"\n                          ? \"Female\"\n                          : \"Male\"\n                        : data.employeeDetails.gender === \"F\"\n                        ? \"Female\"\n                        : \"Other\"}\n                    </p>\n                  </div>\n                </div>\n                \n              <div className=\"row mt-4 mb-5\">\n              <div className=\"col-lg-3 col-md-4 col-6\">\n                  <div className=\"basic_page_details\">\n                    <h6>Phone</h6>\n                    <p>{data.employeeDetails.mobile_no}</p>\n                  </div>\n                </div>\n              </div>\n                \n                <Modal\n                show={emailShow}\n                onHide={()=>setEmailShow(false)}\n                size=\"xl\"\n                aria-labelledby=\"example-custom-modal-styling-title\"\n                >\n                  <Modal.Header closeButton>\n                    <Modal.Title id=\"example-custom-modal-styling-title\">\n                      KYC\n                    </Modal.Title>\n                  </Modal.Header>\n                  <Modal.Body>\n                    <Form onSubmit={handelemailSubmit}>\n                      <Form.Group className=\"my-3\" >\n                        <Form.Label>Company Email <span className=\"text-danger\">*</span> </Form.Label>\n                        <Form.Control type=\"email\"\n                        ref={emailRef}\n                        defaultValue={ data.accountDetails.company_email}\n                        placeholder=\"Email\"\n                        required />\n                      </Form.Group>\n                      <Button variant=\"success\" type={\"submit\"}>Save</Button>\n                    </Form>\n                  </Modal.Body>\n                </Modal>\n              </div>\n            </Tab>\n            <Tab eventKey=\"contact\" title=\"Contact\">\n              <div className=\"row mt-4\">\n              <h4>Current Address</h4>\n                <div className=\"col-lg-3 col-md-4 col-6\">\n                  <div className=\"basic_page_details\">\n                    <h6>Address</h6>\n                    <p><TitleCase text={data.employeeDetails.current_address.address}/></p>\n                  </div>\n                </div>\n                <div className=\"col-lg-3 col-md-4 col-6\">\n                  <div className=\"basic_page_details\">\n                    <h6>State</h6>\n                    <p><TitleCase text={data.employeeDetails.current_address.state}/></p>\n                  </div>\n                </div>\n                <div className=\"col-lg-3 col-md-4 col-6\">\n                  <div className=\"basic_page_details\">\n                    <h6>Country</h6>\n                    <p><TitleCase text={data.employeeDetails.current_address.country}/></p>\n                  </div>\n                </div>\n                <div className=\"col-lg-3 col-md-4 col-6\">\n                  <div className=\"basic_page_details\">\n                    <h6>Pin Code</h6>\n                    <p>{data.employeeDetails.current_address.pincode}</p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row mt-4 mb-5\">\n              <h4>Parmanent Address</h4>\n              <div className=\"col-lg-3 col-md-4 col-6\">\n                  <div className=\"basic_page_details\">\n                    <h6>Address</h6>\n                    <p><TitleCase text={data.employeeDetails.parmanent_address.address}/></p>\n                  </div>\n                </div>\n                <div className=\"col-lg-3 col-md-4 col-6\">\n                  <div className=\"basic_page_details\">\n                    <h6>State</h6>\n                    <p><TitleCase text={data.employeeDetails.parmanent_address.state}/></p>\n                  </div>\n                </div>\n                <div className=\"col-lg-3 col-md-4 col-6\">\n                  <div className=\"basic_page_details\">\n                    <h6>Country</h6>\n                    <p><TitleCase text={data.employeeDetails.parmanent_address.country}/></p>\n                  </div>\n                </div>\n                <div className=\"col-lg-3 col-md-4 col-6\">\n                  <div className=\"basic_page_details\">\n                    <h6>Pin Code</h6>\n                    <p>{data.employeeDetails.parmanent_address.pincode}</p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row mt-4 mb-5\">\n              <div className=\"col-lg-3 col-md-4 col-6\">\n                  <div className=\"basic_page_details\">\n                    <h6>Personal Email</h6>\n                    <p>{data.employeeDetails.email}</p>\n                  </div>\n                </div>\n              </div>\n              \n            </Tab>\n            <Tab eventKey=\"account\" title=\"Account\">\n              {data.accountDetails.account_no ? \n              <><h4>Account Information</h4>\n              {!is_deleted &&<Button variant=\"dark\" onClick={() => handleShow(true)}>\n              + Edit\n              </Button>}\n              <div className=\"row mt-4\">\n                <div className=\"col-lg-3 col-md-4 col-6\">\n                  <div className=\"basic_page_details\">\n                    <h6>Bank Holder Name</h6>\n                    <p><TitleCase text={data.accountDetails.accHolder_name}/></p>\n                  </div>\n                </div>\n                <div className=\"col-lg-3 col-md-4 col-6\">\n                  <div className=\"basic_page_details\">\n                    <h6>Bank Name</h6>\n                    <p><TitleCase text={data.accountDetails.bank_name}/></p>\n                  </div>\n                </div>\n                <div className=\"col-lg-3 col-md-4 col-6\">\n                  <div className=\"basic_page_details\">\n                    <h6>Branch Name</h6>\n                    <p><TitleCase text={data.accountDetails.branch_name}/></p>\n                  </div>\n                </div>\n                <div className=\"col-lg-3 col-md-4 col-6\">\n                  <div className=\"basic_page_details\">\n                    <h6>Account Number</h6>\n                    <p>{data.accountDetails.account_no}</p>\n                  </div>\n                </div>\n                <div className=\"col-lg-3 col-md-4 col-6\">\n                  <div className=\"basic_page_details\">\n                    <h6>Ifsc Code</h6>\n                    <p>{data.accountDetails.ifsc_code}</p>\n                  </div>\n                </div>\n              </div></>\n              :\n              (!is_deleted &&<>\n                <Button variant=\"dark\" onClick={() => handleShow()}>\n                  + Add Account\n                </Button><p>No Account details</p>\n              </>)}\n              <Modal\n                show={show}\n                onHide={handleClose}\n                size=\"xl\"\n                aria-labelledby=\"example-custom-modal-styling-title\"\n              >\n                <Modal.Header closeButton>\n                  <Modal.Title id=\"example-custom-modal-styling-title\">\n                    Add Account\n                  </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                  <Form onSubmit={handelSubmit}>\n                    <Form.Group className=\"my-3\">\n                        <Form.Label>Account Holder Name<span className=\"text-danger\">*</span> </Form.Label>\n                        <Form.Control type=\"text\"\n                        ref={accountHolderRef}\n                        defaultValue={ data.accountDetails.accHolder_name}\n                        placeholder=\"Account holder name\"  required/>\n                    </Form.Group>\n                    <Form.Group className=\"my-3\" >\n                        <Form.Label>Account No<span className=\"text-danger\">*</span> </Form.Label>\n                        <Form.Control type=\"number\"\n                        ref={accountNoRef}\n                        defaultValue={ data.accountDetails.account_no }\n                        onKeyUp={(e)=>handelNumberValue(e)}\n                        placeholder=\"account no \" required />\n                    </Form.Group>\n                    <Form.Group className=\"my-3\" >\n                        <Form.Label>Ifsc Code<span className=\"text-danger\">*</span> </Form.Label>\n                        <Form.Control type=\"text\"\n                        ref={ifscRef}\n                        defaultValue={ data.accountDetails.ifsc_code }\n                        placeholder=\"Ifsc Code\" required/>\n                    </Form.Group>\n                    <Form.Group className=\"my-3\" >\n                        <Form.Label>Bank name<span className=\"text-danger\">*</span> </Form.Label>\n                        <Form.Control type=\"text\"\n                        ref={bankNameRef}\n                        defaultValue={ data.accountDetails.bank_name } \n                        placeholder=\"Bank name\" required />\n                    </Form.Group>\n                    <Form.Group className=\"my-3\" >\n                        <Form.Label>Branch Name</Form.Label>\n                        <Form.Control type=\"text\"\n                        ref={branchNameRef}\n                        defaultValue={ data.accountDetails.branch_name } \n                        placeholder=\"Branch Name\" required />\n                    </Form.Group>\n                    <div className=\"d-flex align-items-center justify-content-between\">        \n                        <Form.Group controlId=\"formFile\" className=\"mt-3\">\n                            <Form.Label>Attachment <span className=\"text-danger\">* (only .jpg/.jpeg)</span></Form.Label>\n                            <Form.Control \n                            ref={fileRef}\n                            onChange={onSelectFile}\n                            accept=\".jpg,.jpeg|image/*\"\n                            type=\"file\" />\n                        </Form.Group>\n                    </div> \n                    <div className=\"img-part ms-3 my-3\">\n                      <img\n                        src={\n                          selectedFile\n                            ? preview\n                            : data.accountDetails.file_link\n                        }\n                        alt=\"Preview\"\n                      />\n                    </div>\n                        {data.isSubmitting\n                                ? \n                                    <Button variant=\"primary\" className=\"mt-4\">\n                                    <Spinner \n                                        as=\"span\"\n                                        animation=\"grow\"\n                                        size=\"sm\"\n                                        role=\"status\"\n                                        aria-hidden=\"true\"\n                                    />\n                                    &#10240;{isEdit?\"Update\":\"Save\" }\n                                    </Button>\n                                :\n                            <Button variant=\"success\" type='submit' className=\"mt-4\">\n                                { isEdit?\"Update\":\"Save\" }\n                            </Button>\n                        }                                \n                    </Form>\n                </Modal.Body>\n              </Modal>\n            </Tab>\n            <Tab eventKey=\"documents\" title=\"Documents\">\n              <h4>Documents</h4>\n              <div className=\"row mt-4\">\n                <div className=\"col-lg-4 col-md-6 col-12\">\n                  <div className=\"basic_page_details\">\n                    <h6 className=\"mb-4\">Pan Card   {data.employeeDetails.panCard_link?(!is_deleted &&<span onClick={()=>setPanEdit(!panEdit)}><CiEdit/></span>): \"\"}</h6>\n                  </div>\n                  <div className=\"img-document\">\n                    {(data.employeeDetails.panCard_link && !panEdit)?<img\n                      src={\n                        data.employeeDetails.panCard_link\n                          ? data.employeeDetails.panCard_link\n                          : Verdi\n                      }\n                      alt=\"Verdi\"\n                    />\n                    :(!is_deleted && <Form onSubmit={handelPanSubmit}>\n                      <Form.Group className=\"my-3\" controlId=\"exampleForm.ControlInput1\">\n                        <Form.Label>Pan Card<span className=\"text-danger\">* (only .jpg/,jpeg)</span> </Form.Label>\n                        <Form.Control type=\"file\"\n                          ref={panRef}\n                          accept=\".jpg,.jpeg|image/*\"\n                          placeholder=\"Account Number\" />\n                        </Form.Group>\n                        <Form.Group className=\"my-3\" controlId=\"exampleForm.ControlInput1\">\n                            <Form.Label>Pan Number</Form.Label>\n                            <Form.Control type=\"text\"\n                            ref={panNumberRef}\n                            defaultValue={data.employeeDetails.panCard_no}\n                            placeholder=\"Branch Code\" />\n                        </Form.Group>\n                        {data.isSubmitting\n                        ? \n                            <Button variant=\"primary\" className=\"mt-4\">\n                            <Spinner \n                                as=\"span\"\n                                animation=\"grow\"\n                                size=\"sm\"\n                                role=\"status\"\n                                aria-hidden=\"true\"\n                            />\n                            &#10240;{(data.employeeDetails.panCard_link && panEdit)?\"Update\":\"Save\" }\n                            </Button>\n                        :\n                          <Button variant=\"success\" type='submit' className=\"mt-4\">\n                              {(data.employeeDetails.panCard_link && panEdit)?\"Update\":\"Save\" }\n                          </Button>\n                        }\n                      </Form>)\n                    }\n                  </div>\n                </div>\n                <div className=\"col-lg-4 col-md-6 col-12\">\n                  <div className=\"basic_page_details\">\n                    <h6 className=\"mb-4\">Aadhar Card  {data.employeeDetails.aadharCard_link?(!is_deleted &&<span onClick={()=>setAdharEdit(!adharEdit)}><CiEdit/></span>):''}</h6>\n                  </div>\n                  <div className=\"img-document\">\n                  {(data.employeeDetails.aadharCard_link && !adharEdit)?\n                  <a href={data.employeeDetails.aadharCard_link } className='ms-2 btn btn-success text-white' target=\"_blank\" rel=\"noreferrer\">Open</a>\n                    :(!is_deleted &&<Form onSubmit={handelAdharSubmit}>\n                      <Form.Group className=\"my-3\" controlId=\"exampleForm.ControlInput1\">\n                        <Form.Label>Adhar Card<span className=\"text-danger\">* (only .pdf)</span> </Form.Label>\n                        <Form.Control type=\"file\"\n                          ref={adharRef}\n                          accept=\"application/pdf\"\n                          placeholder=\"Account Number\" />\n                        </Form.Group>\n                        <Form.Group className=\"my-3\" controlId=\"exampleForm.ControlInput1\">\n                            <Form.Label>Adhar Number</Form.Label>\n                            <Form.Control type=\"text\"\n                            ref={adharNumberRef}\n                            defaultValue={data.employeeDetails.aadharCard_no}\n                            placeholder=\"Branch Code\" />\n                        </Form.Group>\n                            {data.isSubmitting\n                            ? \n                                <Button variant=\"primary\" className=\"mt-4\">\n                                <Spinner \n                                    as=\"span\"\n                                    animation=\"grow\"\n                                    size=\"sm\"\n                                    role=\"status\"\n                                    aria-hidden=\"true\"\n                                />\n                                &#10240;{data.employeeDetails.aadharCard_link?\"Update\":\"Save\" }\n                                </Button>\n                            :\n                              <Button variant=\"success\" type='submit' className=\"mt-4\">\n                                  { data.employeeDetails.aadharCard_link && adharEdit?\"Update\":\"Save\" }\n                              </Button>\n                            }  \n                      </Form>)\n                    }\n                  </div>\n                </div>\n                <div className=\"col-lg-4 col-md-6 col-12\">\n                  <div className=\"basic_page_details\">\n                    <h6 className=\"mb-4\">Bank Account</h6>\n                  </div>\n                  <div className=\"img-document\">\n                    <img\n                      src={\n                        data.accountDetails.file_link\n                          ? data.accountDetails.file_link\n                          : Verdi\n                      }\n                      alt=\"Verdi\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </Tab>\n            <Tab eventKey=\"attendance\" title=\"Attendance\">\n              <h4>Attendance</h4>\n              <div className=\"responsive mt-4\">\n                <Table striped bordered hover>\n                  <thead>\n                    <tr>\n                      <th className=\"text-white\">Index</th>\n                      <th className=\"text-white\">Date</th>\n                      <th className=\"text-white\">Shift</th>\n                      <th className=\"text-white\">Clock IN</th>\n                      <th className=\"text-white\">Clock OUT</th>\n                      <th className=\"text-white\">Late</th>\n                      <th className=\"text-white\">Early Leaving</th>\n                      <th className=\"text-white\">Effective⠀hours</th>\n                      <th className=\"text-white\">Total hours</th>   \n                    </tr>\n                  </thead>\n                  <tbody>\n                    {data.isLoading ? (\n                      <tr key={0} className=\"text-center\">\n                        <td colSpan={8}>Loading...</td>\n                      </tr>\n                    ) : data.attendanceDetails.length > 0 ? (\n                      data.attendanceDetails.map((result, index) => {\n                        return (<>                        \n                        { result.status===\"present\" && \n                            <tr key={index}>\n                            <td>{(index + 1)}</td>\n                            <td><LocaDateFormate date_arg = {result.created_at}/></td>\n                            <td>\n                              <TitleCase\n                                text={result.timeSlot ? result.timeSlot.shift : \"N/A\"}\n                              />\n                            </td>\n                            <td>\n                              <LocalTimeZone time = {result.inTime}/>\n                            </td>\n                            <td>\n                              { \n                                  result.outTime? <LocalTimeZone time = {result.outTime}/>:\"--:--\"\n                              }\n                            </td>\n                            <td className=\"text-center\">\n                              <CalculationLate late = {result.late}/>\n                            </td>\n                            <td className=\"text-center\">\n                              <CalculateEarlyLeave checkOut = {result.outTime} outTime = {result.timeSlot.time_out}/>\n                            </td>\n                            <td>\n                              {result.effective_hours\n                                ? `${result.effective_hours}`\n                                : \"--:--\"}\n                            </td>\n                            <td>\n                              {result.duration\n                                ? `${result.duration}`\n                                : \"--:--\"}\n                            </td>\n                            </tr>\n                        }\n                        { result.status !== \"present\" && \n                            <tr key={index} className={result.status===\"absent\"?\"table-danger\":result.status===\"leave\"?\"table-info\":\"table-warning\"}>\n                              <td>{(index + 1)}</td>\n                              <td><LocaDateFormate date_arg = {result.created_at}/></td>\n                              <td colSpan={7} className=\"text-center\" ><TitleCase text ={result.status}/></td>\n                            </tr>\n                        }\n                      </> )})\n                    ) : (\n                      <tr key={0}>\n                        <td colSpan={8} className=\"text-center\">\n                          No Data Found\n                        </td>\n                      </tr>\n                    )}\n                  </tbody>\n                </Table>\n              </div>\n            </Tab>\n            <Tab eventKey=\"salary\" title=\"Salary\">\n              <h4>Salary</h4>\n              <div className=\"responsive mt-4\">\n                <Table striped bordered hover>\n                  <thead>\n                    <tr>\n                      <th className=\"text-white\">S.No.</th>\n                      <th className=\"text-white\">Month</th>\n                      <th className=\"text-white\">Basic Salary</th>\n                      <th className=\"text-white\">Net Salary</th>\n                      <th className=\"text-white\">Salary Slip</th>\n                      <th className=\"text-white\">Status</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {data.isLoading ? (\n                      <tr key={\"loading\"} className=\"text-center\">\n                        <td colSpan={8}>Loading...</td>\n                      </tr>\n                    ) : data.salaryDetails.length > 0 ? (\n                      data.salaryDetails.map((result, index) => (\n                        <tr key={index}>\n                          <td>{index + 1}</td>\n                          <td>{result.month}</td>\n                          <td>{data.employeeDetails.salary}</td>\n                          <td>{result.amount}</td>\n                          <td>\n                            {data.employeeDetails.salary_slip ? \"Yes\" : \"No\"}\n                          </td>\n                          <td>{result.status}</td>\n                        </tr>\n                      ))\n                    ) : (\n                      <tr key={-1}>\n                        <td colSpan={8} className=\"text-center\">\n                          No Data Found\n                        </td>\n                      </tr>\n                    )}\n                  </tbody>\n                </Table>\n              </div>\n            </Tab>\n            <Tab eventKey=\"leaves\" title=\"leaves\">\n              <h4>Leaves</h4>\n              <div className=\"responsive mt-4\">\n                <Table striped bordered hover>\n                  <thead>\n                    <tr>\n                      <th className=\"text-white\">SL No</th>\n                      <th className=\"text-white\">Leave Type</th>\n                      <th className=\"text-white\">Reason</th>\n                      <th className=\"text-white\">Leave Duration</th>\n                      <th className=\"text-white\">Days</th>\n                      <th className=\"text-white\">Applied On</th>\n                      <th className=\"text-white\">Status</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {data.isLoading ? (\n                      <tr key={0} className=\"text-center\">\n                        <td colSpan={8}>Loading...</td>\n                      </tr>\n                    ) : data.leaveDetail.length > 0 ? (\n                      data.leaveDetail.map((result, index) => (\n                        <tr key={index}>\n                          <td>{index + 1}</td>\n\n                          <td><TitleCase text={result.type}/></td>\n                          <td><ReadMoreReadLess text={result.reason} limit={50}/></td>\n                          <td>\n                            {result.start_date\n                              ? result.start_date.slice(0, 10)\n                              : \"N/A\"}{\" \"}\n                            To{\" \"}\n                            {result.end_date\n                              ? result.end_date.slice(0, 10)\n                              : \"N/A\"}\n                          </td>\n                          <td>\n                            {result.end_date && result.start_date\n                              ? (new Date(result.end_date).getTime() -\n                                  new Date(result.start_date).getTime()) /\n                                (1000 * 3600 * 24)\n                              : \"N/A\"}\n                          </td>\n                          <td>{result.created_at.slice(0, 10)}</td>\n                          <td>{result.status}</td>\n                        </tr>\n                      ))\n                    ) : (\n                      <tr key={0}>\n                        <td colSpan={8} className=\"text-center\">\n                          No Data Found\n                        </td>\n                      </tr>\n                    )}\n                  </tbody>\n                </Table>\n              </div>\n            </Tab>\n          </Tabs>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default EmployeeDetails;\n","import React, { Fragment, useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getAll,\n  deleteRecord,\n  addRecord,\n  getOne,\n  unsetSingleData,\n  updateRecord,\n  getAllByDepartment,\n  serchingData,\n  restoreRecord,\n  clearMacAddress,\n} from \"../../store/admin/employees\";\nimport \"./employees.css\";\nimport 'react-phone-number-input/style.css'\nimport PhoneInput from 'react-phone-number-input'\n//import User from \"../../assets/images/user.jpg\";\nimport {\n  Spinner,\n  Pagination,\n  Modal,\n  Table,\n  InputGroup,\n  Button,\n  Form,\n  Tabs,\n  Tab,\n} from \"react-bootstrap\";\nimport { IoIosArrowRoundUp, IoIosArrowRoundDown } from \"react-icons/io\";\nimport { debounce } from \"lodash\";\nimport EmployeeDetails from \"./components/employee-details\";\nimport Verdi from \"../../assets/images/verdi.png\";\nimport { CSVLink } from \"react-csv\";\nimport Loader from \"../../Components/loader\";\nimport TitleCase from \"../../helper/title-case\";\nimport { storage } from \"../../firebase-config\";\nimport { ref, getDownloadURL } from \"firebase/storage\";\n\nfunction Employees(props) {\n  const dispatch = useDispatch();\n  const notify = props.notify;\n  const jwt = props.jwt;\n\n  const firstNameRef = useRef();\n  const lastNameRef = useRef();\n  const emailRef = useRef();\n  const [mobile_no, setMobile_no] = useState() \n  const [alter_mobile_no, setAlter_mobile_no] = useState()\n  const genderRef = useRef();\n\n  const addressRef = useRef();\n  const stateRef = useRef();\n  const countryRef = useRef();\n  const pinCodeRef = useRef();\n\n  const paddressRef = useRef();\n  const pstateRef = useRef();\n  const pcountryRef = useRef();\n  const ppinCodeRef = useRef();\n\n  const shiftRef = useRef();\n  const joiningRef = useRef();\n  const basicSalaryRef = useRef();\n  const degRef = useRef();\n  const imageRef = useRef();\n  const serchingKeyRef = useRef();\n  const filterRef = useRef();\n  const [salary, setSalary] = useState({ min: \"\", max: \"\" });\n  const [deletedTab, setDeletedTab] = useState(false);\n  const [slip, setSlip] = useState(false);\n  const [isEmailSent, setIsEmailSent] = useState(false);\n  const [showDelete, setShowDelete] = useState(false);\n  const [show, setShow] = useState(false);\n  const [showMac, setShowMac] = useState(false)\n  const [isEdit, setIsEdit] = useState(false);\n  const [id, setId] = useState();\n  const [is_deleted, setIs_Deleted] = useState(false);\n  const [selectedFile, setSelectedFile] = useState();\n  const [preview, setPreview] = useState();\n  const [file, setFile] = useState({ image: null, adhar: null, pan: null });\n  const data = useSelector((status) => status.employees);\n  useEffect(() => {\n    dispatch(getAll({ jwt }));\n  }, [dispatch, jwt]);\n\n  useEffect(()=>{\n    if( data.singledata.length > 0){\n      setMobile_no(data.singledata[0].mobile_no)\n      setAlter_mobile_no(data.singledata[0].alternate_mobile_no)\n    }\n  },[data.singledata])\n\n  //...///\n//   let x \n//   async function checkIfFileExists(filePath) {\n//     console.log(\"hiiii\")\n    \n// }\n\n\n  //...... submit ......//\n  useEffect(() => {\n    if (!data.isError) {\n      setShow(false);\n      setSalary({ max: null, min: null });\n      setIsEdit(false);\n      setIsEmailSent(false);\n      setSelectedFile(\"\");\n      dispatch(unsetSingleData());\n      setShowMac(false)\n    }\n  }, [data.isError, dispatch]);\n  const handelSubmit = async(e) => {\n    e.preventDefault();\n    if (!isEdit) {\n      //... Create Record ...//\n      dispatch(\n        addRecord({\n          jwt,\n          name:\n            firstNameRef.current.value.trim() +\n            \" \" +\n            lastNameRef.current.value.trim(),\n          email: emailRef.current.value.trim(),\n          mobile: mobile_no.trim(),\n          alternetMobile: alter_mobile_no,\n          gender: genderRef.current.value.trim(),\n          current_address: {\n            address: addressRef.current.value.trim(),\n            state: stateRef.current.value.trim(),\n            country: countryRef.current.value.trim(),\n            pincode: pinCodeRef.current.value.trim(),\n          },\n          parmanent_address: {\n            address: paddressRef.current.value.trim(),\n            state: pstateRef.current.value.trim(),\n            country: pcountryRef.current.value.trim(),\n            pincode: ppinCodeRef.current.value.trim(),\n          },\n          salary: basicSalaryRef.current.value.trim(),\n          shift: shiftRef.current.value.trim(),\n          designation: degRef.current.value.trim(),\n          date_of_joining: joiningRef.current.value.trim(),\n          image: imageRef.current.files[0],\n          slip: slip,\n          total: data.allData.length,\n        })\n      );\n    } else {\n      //... Update Record ...//\n      const filePath = data.singledata[0].image_path\n      const docRef = ref(storage, filePath)\n      try {\n          await getDownloadURL(docRef)\n          console.log(\"in\",true)\n          dispatch(\n            updateRecord({\n              jwt,\n              id: data.singledata[0]._id,\n              oldimage_path: data.singledata[0].image_path,\n              oldimage_link: data.singledata[0].image_link,\n              name:\n                firstNameRef.current.value.trim() +\n                \" \" +\n                lastNameRef.current.value.trim(),\n              email: emailRef.current.value.trim(),\n              mobile: mobile_no.trim(),\n              alternetMobile: alter_mobile_no,\n              gender: genderRef.current.value.trim(),\n              current_address: {\n                address: addressRef.current.value.trim(),\n                state: stateRef.current.value.trim(),\n                country: countryRef.current.value.trim(),\n                pincode: pinCodeRef.current.value.trim(),\n              },\n              parmanent_address: {\n                address: paddressRef.current.value.trim(),\n                state: pstateRef.current.value.trim(),\n                country: pcountryRef.current.value.trim(),\n                pincode: ppinCodeRef.current.value.trim(),\n              },\n              salary: basicSalaryRef.current.value.trim(),\n              shift: shiftRef.current.value.trim(),\n              designation: degRef.current.value.trim(),\n              date_of_joining: joiningRef.current.value.trim(),\n              image: imageRef.current.files[0],\n              slip: slip,\n              is_send: isEmailSent,\n            })\n          );\n          return true\n      } catch (error) {\n          console.log(\"in\",false)\n          dispatch(\n            updateRecord({\n              jwt,\n              id: data.singledata[0]._id,\n              oldimage_path: null,\n              oldimage_link: null,\n              name:\n                firstNameRef.current.value.trim() +\n                \" \" +\n                lastNameRef.current.value.trim(),\n              email: emailRef.current.value.trim(),\n              mobile: mobile_no.trim(),\n              alternetMobile: alter_mobile_no,\n              gender: genderRef.current.value.trim(),\n              current_address: {\n                address: addressRef.current.value.trim(),\n                state: stateRef.current.value.trim(),\n                country: countryRef.current.value.trim(),\n                pincode: pinCodeRef.current.value.trim(),\n              },\n              parmanent_address: {\n                address: paddressRef.current.value.trim(),\n                state: pstateRef.current.value.trim(),\n                country: pcountryRef.current.value.trim(),\n                pincode: ppinCodeRef.current.value.trim(),\n              },\n              salary: basicSalaryRef.current.value.trim(),\n              shift: shiftRef.current.value.trim(),\n              designation: degRef.current.value.trim(),\n              date_of_joining: joiningRef.current.value.trim(),\n              image: imageRef.current.files[0],\n              slip: slip,\n              is_send: isEmailSent,\n            })\n          );\n          return false\n          \n      }\n      \n    }\n  };\n  //shorting.....\n  const handelshorting = (key) => {\n    dispatch(getAll({ jwt, param: key, x: !data.sorting_on.sort }));\n  };\n  //serching.......\n  const handelserching = debounce(() => {\n    let searchKey = serchingKeyRef.current.value;\n    if (searchKey.length === 0) {\n      dispatch(getAll({ jwt }));\n    }\n    if (searchKey.length >= 3) {\n      dispatch(serchingData({ jwt, searchKey }));\n    }\n    filterRef.current.value = \"\";\n  }, 500);\n\n  //......pagination.......//\n  //....All Data...//\n  let items = [];\n  for (let number = 1; number <= data.pagination_AllData.totalpages; number++) {\n    items.push(\n      <Pagination.Item\n        key={number}\n        active={number === data.pagination_AllData.currentpage}\n        onClick={() => handelPagination(number)}\n      >\n        {number}\n      </Pagination.Item>\n    );\n  }\n  //...... deleted data ........//\n  let items1 = [];\n  for (\n    let number = 1;\n    number <= data.pagination_Deleted_AllData.totalpages;\n    number++\n  ) {\n    items1.push(\n      <Pagination.Item\n        key={`deleted-` + number}\n        active={number === data.pagination_Deleted_AllData.currentpage}\n        onClick={() => handelPagination(number)}\n      >\n        {number}\n      </Pagination.Item>\n    );\n  }\n  const handelPagination = (number) => {\n    if (data.isSearch && !deletedTab)\n      return dispatch(\n        serchingData({\n          jwt,\n          pageno: number,\n          searchKey: serchingKeyRef.current.value,\n        })\n      );\n    if (data.isfilter && !deletedTab)\n      return dispatch(\n        getAllByDepartment({ jwt, pageno: number, id: data.filter })\n      );\n    return dispatch(\n      getAll({\n        jwt,\n        pageno: number,\n        type: deletedTab ? \"deleted\" : \"available \",\n      })\n    );\n  };\n  //delete.....\n  const handeldelete = () => {\n    dispatch(\n      deleteRecord({\n        jwt,\n        id,\n        file,\n        pageno:\n          data.allData.length === 1 && data.pagination_AllData.currentpage > 1\n            ? Number(data.pagination_AllData.currentpage) - 1\n            : data.pagination_AllData.currentpage,\n      })\n    );\n    setView(!view);\n    setShowDelete(false);\n  };\n\n  const handleDeleteClose = () => {\n    setShowDelete(false);\n  };\n  //.....filter.....//\n  const filter = (e) => {\n    if (e.target.value)\n      dispatch(getAllByDepartment({ id: e.target.value, jwt }));\n    else dispatch(getAll({ jwt }));\n  };\n  const handelTab = (e) => {\n    if (e === \"available\") {\n      setDeletedTab(false);\n    } else {\n      setDeletedTab(true);\n    }\n  };\n  //.......//\n  const handleShow = async (id, isedite = false, max, min) => {\n    setShow(true);\n    if (isedite) {\n      setSalary({\n        ...salary,\n        max: max,\n        min: min,\n      });\n      setIsEdit(true);\n      dispatch(getOne(id));\n    } else {\n      setIsEdit(false);\n    }\n  };\n  const handleClose = () => {\n    setShow(false);\n    setSalary({ ...salary, max: null, min: null });\n    setIsEdit(false);\n    setIsEmailSent(false);\n    setSlip(false);\n    setSelectedFile(\"\");\n    setMobile_no()\n    setAlter_mobile_no()\n    dispatch(unsetSingleData());\n  };\n  const handelSelectDesingnation = async () => {\n    if (degRef.current.value) {\n      if (data.alldesignation.length > 0) {\n        data.alldesignation.forEach((result) => {\n          result.departments.forEach((result2) => {\n            if (result2.designation.length > 0)\n              result2.designation.forEach((result1) => {\n                if (result1._id === degRef.current.value) {\n                  setSalary({\n                    ...salary,\n                    max: result1.max_salary,\n                    min: result1.min_salary,\n                  });\n                  return;\n                }\n              });\n          });\n        });\n      }\n    } else {\n      setSalary({ ...salary, max: null, min: null });\n    }\n  };\n\n  useEffect(() => {\n    if (!selectedFile) {\n      setPreview(undefined);\n      return;\n    }\n    const objectUrl = URL.createObjectURL(selectedFile);\n    setPreview(objectUrl);\n    // free memory when ever this component is unmounted\n    return () => URL.revokeObjectURL(objectUrl);\n  }, [selectedFile]);\n\n  const onSelectFile = (e) => {\n    if (!e.target.files || e.target.files.length === 0) {\n      setSelectedFile(undefined);\n      return;\n    }\n    // I've kept this example simple by using the first image instead of multiple\n    setSelectedFile(e.target.files[0]);\n  };\n  const checkAddresh = (e) => {\n    if (e.target.checked) {\n      paddressRef.current.value = addressRef.current.value;\n      pstateRef.current.value = stateRef.current.value;\n      pcountryRef.current.value = countryRef.current.value;\n      ppinCodeRef.current.value = pinCodeRef.current.value;\n    } else {\n      paddressRef.current.value = \"\";\n      pstateRef.current.value = \"\";\n      pcountryRef.current.value = \"\";\n      ppinCodeRef.current.value = \"\";\n    }\n  };\n  const checkvalue = (e) => {\n    setSlip(e.target.checked);\n  };\n  const checkSendEmailOrNot = (e) => {\n    setIsEmailSent(e.target.checked);\n  };\n\n  const [view, setView] = useState(false);\n  const handelview = (id, image, adhar, pan, isDelete = false) => {\n    setView(!view);\n    setId(id);\n    setIs_Deleted(isDelete);\n    setFile({ ...file, image: image, adhar: adhar, pan: pan });\n  };\n\n  const handlemacShow = (id)=>{\n    console.log(id)\n    setId(id)\n    setShowMac(true)\n  }\n  const handlecleanMac = ()=>{\n    dispatch(clearMacAddress({jwt, id}))\n  }\n\n  \n  if (data.isFirstLoading) return <Loader />;\n\n  if (!view)\n    return (\n      <>\n        <div className=\"page-section p-4\">\n          <div className=\"employees chart mb-5\">\n            <div className=\"d-md-flex d-block justify-content-between\">\n              <h4>Employees List</h4>\n              <div className=\"d-flex align-items-center\">\n                <Button variant=\"dark\" onClick={() => handleShow()}>\n                  + Add Employees\n                </Button>\n                {data.allData.length > 0 ? (\n                  <CSVLink\n                    className=\"btn btn-info text-white ms-2\"\n                    data={\n                      data.allData.length > 0\n                        ? data.allData.map((prod, index) => {\n                            return {\n                              \"S.No.\": index + 1,\n                              \"User Name\": prod.name,\n                              Gender:\n                                prod.gender === \"F\"\n                                  ? \"Female\"\n                                  : prod.gender === \"M\"\n                                  ? \"Male\"\n                                  : \"Other\",\n                              \"Phone Number\": prod.mobile_no,\n                              \"Alternate Number\": prod.alternate_mobile_no\n                                ? prod.alternate_mobile_no\n                                : \"N/A\",\n                              Email: prod.email,\n                              \"Current Address\": prod.current_address\n                                ? prod.current_address.address +\n                                  \", \" +\n                                  prod.current_address.state +\n                                  \", \" +\n                                  prod.current_address.country +\n                                  \", \" +\n                                  prod.current_address.pincode\n                                : \"N/A\",\n                              \"Department And Degignation\": prod.designation\n                                ? prod.designation.department\n                                  ? prod.designation.name +\n                                    \"(\" +\n                                    prod.designation.department.name +\n                                    \")\"\n                                  : \"N/A\"\n                                : \"N/A\",\n                              \"Created At\": prod.created_at,\n                            };\n                          })\n                        : \" \"\n                    }\n                    filename={`employee-${new Date(\n                      Date.now()\n                    ).toLocaleDateString()}.csv`}\n                  >\n                    Download&#10240;Report\n                  </CSVLink>\n                ) : (\n                  <></>\n                )}\n              </div>\n            </div>\n            <div className=\"row align-items-center justify-content-between my-4\">\n              <div className=\"col-lg-3 col-12\">\n                <Form.Select\n                  aria-label=\"Default select example\"\n                  onChange={(e) => filter(e)}\n                  ref={filterRef}\n                >\n                  <option value={\"\"}>Filter User A/C Department</option>\n                  {data.headAllData.length > 0\n                    ? data.headAllData.map((result, index) => {\n                        const { departments } = result;\n                        return (\n                          <optgroup key={`opt-${index}`} label={result.name}>\n                            {departments.length > 0\n                              ? departments.map((result, index1) => (\n                                  <option key={index1} value={result.id}>\n                                    <TitleCase text={result.name} />\n                                  </option>\n                                ))\n                              : \"\"}\n                          </optgroup>\n                        );\n                      })\n                    : \"\"}\n                </Form.Select>\n              </div>\n              <div className=\"col-lg-3 col-12\"></div>\n              <div className=\"col-lg-3 col-12\">\n                <InputGroup className=\"me-3 my-lg-0 my-3\">\n                  <Form.Control\n                    placeholder=\"Search....\"\n                    onChange={handelserching}\n                    ref={serchingKeyRef}\n                    aria-label=\"Recipient's username\"\n                    aria-describedby=\"basic-addon2\"\n                  />\n                </InputGroup>\n              </div>\n            </div>\n            <Tabs\n              defaultActiveKey=\"available\"\n              onSelect={handelTab}\n              id=\"uncontrolled-tab-example\"\n              className=\"mb-3\"\n            >\n              <Tab eventKey=\"available\" title=\"Available\">\n                <div className=\"responsive mt-4\">\n                  <Table striped bordered hover>\n                    <thead>\n                      <tr>\n                        <th className=\"text-white\">S.No.</th>\n                        <th\n                          className=\"text-white\"\n                          onClick={() => handelshorting(\"name\")}\n                        >\n                          Name\n                          {data.sorting_on.field === \"name\" ? (\n                            data.sorting_on.sort ? (\n                              <span className=\"text-white\">\n                                <IoIosArrowRoundUp />\n                              </span>\n                            ) : (\n                              <span\n                                style={{\n                                  color: \"#fff\",\n                                  position: \"relative\",\n                                  right: \"0\",\n                                }}\n                              >\n                                <IoIosArrowRoundDown />\n                              </span>\n                            )\n                          ) : (\n                            <></>\n                          )}\n                        </th>\n                        <th className=\"text-white\">Designation</th>\n                        <th className=\"text-white\">Contact&#10240;Number</th>\n                        <th className=\"text-white\">Gender</th>\n                        <th className=\"text-white\">Address</th>\n                        <th className=\"text-white\">Action</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {data.isLoading ? (\n                        <tr key={\"loading\"} className=\"text-center\">\n                          <td colSpan={8}>Loading...</td>\n                        </tr>\n                      ) : data.allData.length > 0 ? (\n                        data.allData.map((result, index) => (\n                          <tr key={index}>\n                            <td>\n                              {(data.pagination_AllData.currentpage - 1) * 10 +\n                                (index + 1)}\n                            </td>\n                            <td>\n                              <div className=\"d-flex\">\n                                {/* <img\n                                  src={\n                                    result.image_link ? result.image_link : User\n                                  }\n                                  alt=\"User\"\n                                  className=\"img-fluid rounded-circle\"\n                                  style={{ width: \"40px\", height: \"40px\" }}\n                                /> */}\n                                <div className=\"ms-3\">\n                                  <h6 className=\"mb-0 \">\n                                    <TitleCase text={result.name} />\n                                  </h6>\n                                  <small className=\"mb-0 text-muted\">\n                                    {result.email}\n                                  </small>\n                                </div>\n                              </div>\n                            </td>\n                            <td>\n                              <div className=\"ms-3\">\n                                <h6 className=\"mb-0 \">\n                                  <TitleCase text={result.designation.name} />\n                                </h6>\n                                <small className=\"mb-0 text-muted\">\n                                  <TitleCase\n                                    text={\n                                      result.designation.department.user_head\n                                    }\n                                  />\n                                </small>\n                              </div>\n                            </td>\n                            <td>\n                              {result.mobile_no}{result.alternate_mobile_no &&`, ${result.alternate_mobile_no}`}\n                            </td>\n                            <td>\n                              {result.gender === \"F\"\n                                ? \"Female\"\n                                : result.gender === \"M\"\n                                ? \"Male\"\n                                : \"Other\"}\n                            </td>\n                            <td>\n                              <address>\n                                <TitleCase\n                                  text={result.current_address.address}\n                                />\n                                ,<br />\n                                <TitleCase\n                                  text={result.current_address.state}\n                                />\n                                ,<br />\n                                <TitleCase\n                                  text={result.current_address.country}\n                                />\n                                ,\n                                <TitleCase\n                                  text={result.current_address.pincode}\n                                />\n                              </address>\n                            </td>\n                            <td className=\"table-data-btn\">\n                              {!result.is_deleted && (\n                                <Button\n                                  onClick={() => {\n                                    handleShow(\n                                      result._id,\n                                      true,\n                                      result.designation.max_salary,\n                                      result.designation.min_salary\n                                    );\n                                  }}\n                                  className=\"btn btn-warning text-white\"\n                                >\n                                  Edit\n                                </Button>\n                              )}\n                              <Button\n                                  onClick={() =>handlemacShow(result._id)}\n                                  className=\"btn btn-danger text-white\"\n                                >\n                                  Clear&#10240;MAC\n                                </Button>\n                              <button\n                                type=\"button\"\n                                onClick={() =>\n                                  handelview(\n                                    result._id,\n                                    result.image_path,\n                                    result.aadharCard_path,\n                                    result.panCard_path,\n                                    result.is_deleted\n                                  )\n                                }\n                                className=\"w-100 btn btn-primary\"\n                              >\n                                View\n                              </button>\n                              \n                            </td>\n                          </tr>\n                        ))\n                      ) : (\n                        <tr key={-1}>\n                          <td colSpan={8} className=\"text-center\">\n                            No Data Found\n                          </td>\n                        </tr>\n                      )}\n                    </tbody>\n                  </Table>\n                  <Pagination> {items}</Pagination>\n                </div>\n              </Tab>\n              <Tab eventKey=\"deleted\" title=\"Deleted\">\n                <div className=\"responsive mt-4\">\n                  <Table striped bordered responsive hover>\n                    <thead>\n                      <tr>\n                        <th className=\"text-white\">S.No.</th>\n                        <th className=\"text-white\">Name</th>\n                        <th className=\"text-white\">Designation</th>\n                        <th className=\"text-white\">Contact&#10240;Number</th>\n                        <th className=\"text-white\">Gender</th>\n                        <th className=\"text-white\">Address</th>\n                        <th className=\"text-white\">Action</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {data.isLoading ? (\n                        <tr key={\"loading\"} className=\"text-center\">\n                          <td colSpan={8}>Loading...</td>\n                        </tr>\n                      ) : data.deleted_allData.length > 0 ? (\n                        data.deleted_allData.map((result, index) => (\n                          <tr key={index}>\n                            <td>\n                              {(data.pagination_Deleted_AllData.currentpage -\n                                1) *\n                                10 +\n                                (index + 1)}\n                            </td>\n                            <td>\n                              <div className=\"d-flex\">\n                                {/* <img\n                                  src={\n                                    result.image_link ? result.image_link : User\n                                  }\n                                  alt=\"User\"\n                                  className=\"img-fluid rounded-circle\"\n                                  style={{ width: \"40px\", height: \"40px\" }}\n                                /> */}\n                                <div className=\"ms-3\">\n                                  <h6 className=\"mb-0 \">\n                                    <TitleCase text={result.name} />\n                                  </h6>\n                                  <small className=\"mb-0 text-muted\">\n                                    {result.email}\n                                  </small>\n                                </div>\n                              </div>\n                            </td>\n                            <td>\n                              <div className=\"ms-3\">\n                                <h6 className=\"mb-0 \">\n                                  <TitleCase text={result.designation.name} />\n                                </h6>\n                                <small className=\"mb-0 text-muted\">\n                                  <TitleCase\n                                    text={\n                                      result.designation.department.user_head\n                                    }\n                                  />\n                                </small>\n                              </div>\n                            </td>\n                            <td>\n                              {result.mobile_no} , {result.alternate_mobile_no}\n                            </td>\n                            <td>\n                              {result.gender === \"F\"\n                                ? \"Female\"\n                                : result.gender === \"M\"\n                                ? \"Male\"\n                                : \"Other\"}\n                            </td>\n                            <td>\n                              <address>\n                                <TitleCase\n                                  text={result.current_address.address}\n                                />\n                                ,<br />\n                                <TitleCase\n                                  text={result.current_address.state}\n                                />\n                                ,<br />\n                                <TitleCase\n                                  text={result.current_address.country}\n                                />\n                                ,\n                                <TitleCase\n                                  text={result.current_address.pincode}\n                                />\n                              </address>\n                            </td>\n                            <td>\n                              <button\n                                type=\"button\"\n                                onClick={() =>\n                                  handelview(\n                                    result._id,\n                                    result.image_path,\n                                    result.aadharCard_path,\n                                    result.panCard_path,\n                                    result.is_deleted\n                                  )\n                                }\n                                className=\"ms-3 btn btn-primary\"\n                              >\n                                View\n                              </button>\n                              <button\n                                type=\"button\"\n                                onClick={() =>\n                                  dispatch(\n                                    restoreRecord({\n                                      id: result._id,\n                                      jwt,\n                                      pageno:\n                                        data.deleted_allData.length === 1 &&\n                                        data.pagination_Deleted_AllData\n                                          .currentpage > 1\n                                          ? Number(\n                                              data.pagination_Deleted_AllData\n                                                .currentpage\n                                            ) - 1\n                                          : data.pagination_Deleted_AllData\n                                              .currentpage,\n                                    })\n                                  )\n                                }\n                                className=\"ms-3 btn btn-warning\"\n                              >\n                                Restore\n                              </button>\n                            </td>\n                          </tr>\n                        ))\n                      ) : (\n                        <tr key={-1}>\n                          <td colSpan={8} className=\"text-center\">\n                            No Data Found\n                          </td>\n                        </tr>\n                      )}\n                    </tbody>\n                  </Table>\n                  <Pagination> {items1}</Pagination>\n                </div>\n              </Tab>\n            </Tabs>\n          </div>\n        </div>\n        <Modal\n          contentClassName=\"employees-modal\"\n          show={show}\n          onHide={handleClose}\n          size=\"xl\"\n          aria-labelledby=\"example-custom-modal-styling-title\"\n        >\n          <Modal.Header closeButton>\n            <Modal.Title id=\"example-custom-modal-styling-title\">\n              {isEdit ? \"Edit Employees\" : \"Add Employees\"}\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form onSubmit={handelSubmit}>\n              <div className=\"row\">\n                <div className=\"col-lg-4 col-md-6 col-12\">\n                  <Form.Group className=\"mb-3\">\n                    <Form.Label>\n                      {\" \"}\n                      First Name <span className=\"text-danger\">*</span>{\" \"}\n                    </Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      ref={firstNameRef}\n                      defaultValue={\n                        data.singledata.length > 0\n                          ? data.singledata[0].name\n                              .split(\" \")\n                              .slice(0, 1)\n                              .join(\" \")\n                          : \"\"\n                      }\n                      placeholder=\"First Name\"\n                      required\n                    />\n                    <span className=\"text-danger\">\n                      {data.errors.length > 0\n                        ? data.errors.map((err) =>\n                            err.param === \"name\" ? (\n                              <TitleCase\n                                key={\"err\" + err.param}\n                                text={err.msg}\n                              />\n                            ) : (\n                              \"\"\n                            )\n                          )\n                        : \"\"}\n                    </span>\n                  </Form.Group>\n                </div>\n                <div className=\"col-lg-4 col-md-6 col-12\">\n                  <Form.Group className=\"mb-3\">\n                    <Form.Label>\n                      Last Name <span className=\"text-danger\">*</span>\n                    </Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      ref={lastNameRef}\n                      defaultValue={\n                        data.singledata.length > 0\n                          ? data.singledata[0].name\n                              .split(\" \")\n                              .slice(-1)\n                              .join(\" \")\n                          : \"\"\n                      }\n                      placeholder=\"Last Name\"\n                      required\n                    />\n                  </Form.Group>\n                </div>\n                <div className=\"col-lg-4 col-md-6 col-12\">\n                  <Form.Group className=\"mb-3\">\n                    <Form.Label>\n                      Gender<span className=\"text-danger\">*</span>\n                    </Form.Label>\n                    <Form.Select\n                      ref={genderRef}\n                      defaultValue={\n                        data.singledata.length > 0\n                          ? data.singledata[0].gender\n                          : \"\"\n                      }\n                      aria-label=\"Default select example\"\n                      required\n                    >\n                      <option value={\"\"}>Select</option>\n                      <option value=\"F\">Female</option>\n                      <option value=\"M\">Male</option>\n                      <option value=\"O\">Other</option>\n                    </Form.Select>\n                    <span className=\"text-danger\">\n                      {data.errors.length > 0\n                        ? data.errors.map((err) =>\n                            err.param === \"gender\" ? (\n                              <TitleCase\n                                key={\"err\" + err.param}\n                                text={err.msg}\n                              />\n                            ) : (\n                              \"\"\n                            )\n                          )\n                        : \"\"}\n                    </span>\n                  </Form.Group>\n                </div>\n                <hr />\n                <h4>Current Address</h4>\n                <div className=\"col-lg-4 col-md-6 col-12\">\n                  <Form.Group\n                    className=\"mb-0\"\n                    controlId=\"exampleForm.ControlTextarea1\"\n                  >\n                    <Form.Label>\n                      Address<span className=\"text-danger\">*</span>\n                    </Form.Label>\n                    <Form.Control\n                      as=\"textarea\"\n                      ref={addressRef}\n                      defaultValue={\n                        data.singledata.length > 0\n                          ? data.singledata[0].current_address.address\n                          : \"\"\n                      }\n                      rows={3}\n                      placeholder=\"Address\"\n                      required\n                    />\n                    <span className=\"text-danger\">\n                      {data.errors.length > 0\n                        ? data.errors.map((err) => {\n                            const { param } = err;\n                            if (param === \"current_address\") {\n                              const msg = JSON.parse(err.msg);\n                              if (msg.param === \"address\") {\n                                return <TitleCase text={msg.msg} />;\n                              }\n                            }\n                            return true;\n                          })\n                        : \"\"}\n                    </span>\n                  </Form.Group>\n                </div>\n                <div className=\"col-lg-4 col-md-6 col-12\">\n                  <Form.Group className=\"mb-3\">\n                    <Form.Label>\n                      State<span className=\"text-danger\">*</span>\n                    </Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      ref={stateRef}\n                      defaultValue={\n                        data.singledata.length > 0\n                          ? data.singledata[0].current_address.state\n                          : \"\"\n                      }\n                      required\n                    >\n                    </Form.Control>\n                    <span className=\"text-danger\">\n                      {data.errors.length > 0\n                        ? data.errors.map((err) => {\n                            const { param } = err;\n                            if (param === \"current_address\") {\n                              const msg = JSON.parse(err.msg);\n                              if (msg.param === \"state\") {\n                                return <TitleCase text={msg.msg} />;\n                              }\n                            }\n                            return true;\n                          })\n                        : \"\"}\n                    </span>\n                  </Form.Group>\n                </div>\n                <div className=\"col-lg-4 col-md-6 col-12\">\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>\n                      Country <span className=\"text-danger\">*</span>\n                    </Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      ref={countryRef}\n                      defaultValue=\"India\"\n                      placeholder=\"Country\"\n                      required\n                    />\n                  </Form.Group>\n                </div>\n                <div className=\"col-lg-4 col-md-6 col-12\">\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>\n                      Pin Code <span className=\"text-danger\">*</span>\n                    </Form.Label>\n                    <Form.Control\n                      type=\"number\"\n                      ref={pinCodeRef}\n                      defaultValue={\n                        data.singledata.length > 0\n                          ? data.singledata[0].current_address.pincode\n                          : \"\"\n                      }\n                      min={100000}\n                      max={999999}\n                      placeholder=\"Pin Code\"\n                      required\n                    />\n                    <span className=\"text-danger\">\n                      {data.errors.length > 0\n                        ? data.errors.map((err) => {\n                            const { param } = err;\n                            if (param === \"current_address\") {\n                              const msg = JSON.parse(err.msg);\n                              if (msg.param === \"pincode\") {\n                                return <TitleCase text={msg.msg} />;\n                              }\n                            }\n                            return true;\n                          })\n                        : \"\"}\n                    </span>\n                  </Form.Group>\n                </div>\n                <h4>Permanent Address</h4>\n                {[\"checkbox\"].map((type) => (\n                  <div key={`default-${type}`} className=\"mb-3\">\n                    <Form.Check\n                      type={type}\n                      onChange={checkAddresh}\n                      label=\"Same As Current\"\n                    />\n                  </div>\n                ))}\n                <div className=\"col-lg-4 col-md-6 col-12\">\n                  <Form.Group\n                    className=\"mb-0\"\n                    controlId=\"exampleForm.ControlTextarea1\"\n                  >\n                    <Form.Label>\n                      Address<span className=\"text-danger\">*</span>\n                    </Form.Label>\n                    <Form.Control\n                      as=\"textarea\"\n                      ref={paddressRef}\n                      defaultValue={\n                        data.singledata.length > 0\n                          ? data.singledata[0].parmanent_address.address\n                          : \"\"\n                      }\n                      rows={3}\n                      placeholder=\"Address\"\n                      required\n                    />\n                    <span className=\"text-danger\">\n                      {data.errors.length > 0\n                        ? data.errors.map((err) => {\n                            const { param } = err;\n                            if (param === \"parmanent_address\") {\n                              const msg = JSON.parse(err.msg);\n                              if (msg.param === \"address\") {\n                                return <TitleCase text={msg.msg} />;\n                              }\n                            }\n                            return true;\n                          })\n                        : \"\"}\n                    </span>\n                  </Form.Group>\n                </div>\n                <div className=\"col-lg-4 col-md-6 col-12\">\n                  <Form.Group className=\"mb-3\">\n                    <Form.Label>\n                      State<span className=\"text-danger\">*</span>\n                    </Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      ref={pstateRef}\n                      defaultValue={\n                        data.singledata.length > 0\n                          ? data.singledata[0].current_address.state\n                          : \"\"\n                      }\n                      required\n                    >\n                    </Form.Control>\n                    <span className=\"text-danger\">\n                      {data.errors.length > 0\n                        ? data.errors.map((err) => {\n                            const { param } = err;\n                            if (param === \"parmanent_address\") {\n                              const msg = JSON.parse(err.msg);\n                              if (msg.param === \"state\") {\n                                return <TitleCase text={msg.msg} />;\n                              }\n                            }\n                            return true;\n                          })\n                        : \"\"}\n                    </span>\n                  </Form.Group>\n                </div>\n                <div className=\"col-lg-4 col-md-6 col-12\">\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>\n                      Country <span className=\"text-danger\">*</span>\n                    </Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      ref={pcountryRef}\n                      defaultValue=\"India\"\n                      placeholder=\"Country\"\n                      required\n                    />\n                    <span className=\"text-danger\">\n                      {data.errors.length > 0\n                        ? data.errors.map((err) => {\n                            const { param } = err;\n                            if (param === \"parmanent_address\") {\n                              const msg = JSON.parse(err.msg);\n                              if (msg.param === \"country\") {\n                                return <TitleCase text={msg.msg} />;\n                              }\n                            }\n                            return true;\n                          })\n                        : \"\"}\n                    </span>\n                  </Form.Group>\n                </div>\n                <div className=\"col-lg-4 col-md-6 col-12\">\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>\n                      Pin Code <span className=\"text-danger\">*</span>\n                    </Form.Label>\n                    <Form.Control\n                      type=\"number\"\n                      ref={ppinCodeRef}\n                      defaultValue={\n                        data.singledata.length > 0\n                          ? data.singledata[0].parmanent_address.pincode\n                          : \"\"\n                      }\n                      min={100000}\n                      max={999999}\n                      placeholder=\"Pin Code\"\n                      required\n                    />\n                    <span className=\"text-danger\">\n                      {data.errors.length > 0\n                        ? data.errors.map((err) => {\n                            const { param } = err;\n                            if (param === \"parmanent_address\") {\n                              const msg = JSON.parse(err.msg);\n                              if (msg.param === \"pincode\") {\n                                return <TitleCase text={msg.msg} />;\n                              }\n                            }\n                            return true;\n                          })\n                        : \"\"}\n                    </span>\n                  </Form.Group>\n                </div>\n                <hr />\n                <div className=\"col-lg-4 col-md-6 col-12\">\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>\n                      Contact Number <span className=\"text-danger\">*</span>\n                    </Form.Label>\n                    <PhoneInput\n                      placeholder=\"Enter phone number\"\n                      international={true}\n                      defaultCountry=\"IN\"\n                      countries={[\"IN\",\"AE\"]}\n                      defaultValue={\n                        data.singledata.length > 0\n                          ? data.singledata[0].mobile_no\n                          : \"\"\n                      }\n                      value={mobile_no}\n                      onChange={setMobile_no}\n                    />\n                    {/* <Form.Control\n                      type=\"text\"\n                      ref={contactNumberRef}\n                      defaultValue={\n                        data.singledata.length > 0\n                          ? data.singledata[0].mobile_no\n                          : \"\"\n                      }\n                      placeholder=\"Contact Number\"\n                      required\n                    /> */}\n                    <span className=\"text-danger\">\n                      {data.errors.length > 0\n                        ? data.errors.map((err) =>\n                            err.param === \"mobile_no\" ? (\n                              <TitleCase\n                                key={\"err\" + err.param}\n                                text={err.msg}\n                              />\n                            ) : (\n                              \"\"\n                            )\n                          )\n                        : \"\"}\n                    </span>\n                  </Form.Group>\n                </div>\n                <div className=\"col-lg-4 col-md-6 col-12\">\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>Alternate Contact Number</Form.Label>\n                    <PhoneInput\n                      placeholder=\"Enter phone number\"\n                      international={true}\n                      defaultCountry=\"IN\"\n                      countries={[\"IN\",\"AE\"]}\n                      defaultValue={\n                        data.singledata.length > 0\n                          ? data.singledata[0].alternate_mobile_no\n                          : \"\"\n                      }\n                      value={alter_mobile_no}\n                      onChange={setAlter_mobile_no}\n                    />\n                    {/* <Form.Control\n                      type=\"text\"\n                      ref={altcontactNumberRef}\n                      defaultValue={\n                        data.singledata.length > 0\n                          ? data.singledata[0].alternate_mobile_no\n                          : \"\"\n                      }\n                      placeholder=\"Alternate Contact Number\"\n                    /> */}\n                  </Form.Group>\n                </div>\n                <div className=\"col-lg-4 col-md-6 col-12\">\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>\n                      {\" \"}\n                      Email <span className=\"text-danger\">*</span>{\" \"}\n                    </Form.Label>\n                    <Form.Control\n                      type=\"email\"\n                      ref={emailRef}\n                      defaultValue={\n                        data.singledata.length > 0\n                          ? data.singledata[0].email\n                          : \"\"\n                      }\n                      placeholder=\"Email\"\n                      required\n                    />\n                    <span className=\"text-danger\">\n                      {data.errors.length > 0\n                        ? data.errors.map((err) =>\n                            err.param === \"email\" ? (\n                              <TitleCase\n                                key={\"err\" + err.param}\n                                text={err.msg}\n                              />\n                            ) : (\n                              \"\"\n                            )\n                          )\n                        : \"\"}\n                    </span>\n                  </Form.Group>\n                </div>\n                <div className=\"col-lg-4 col-md-6 col-12\">\n                  <Form.Group className=\"mb-3\">\n                    <Form.Label>\n                      {\" \"}\n                      Office Shift <span className=\"text-danger\">*</span>{\" \"}\n                    </Form.Label>\n                    <Form.Select\n                      aria-label=\"Default select example\"\n                      defaultValue={\n                        data.singledata.length > 0\n                          ? data.singledata[0].shift._id\n                          : \"\"\n                      }\n                      ref={shiftRef}\n                      required\n                    >\n                      <option value={\"\"}> Select</option>\n                      {data.allShiftData.length > 0\n                        ? data.allShiftData.map((result, index) => (\n                            <option key={index} value={result._id}>\n                              {result.shift}\n                            </option>\n                          ))\n                        : \"\"}\n                    </Form.Select>\n                    <span className=\"text-danger\">\n                      {data.errors.length > 0\n                        ? data.errors.map((err) =>\n                            err.param === \"shift\" ? (\n                              <TitleCase\n                                key={\"err\" + err.param}\n                                text={err.msg}\n                              />\n                            ) : (\n                              \"\"\n                            )\n                          )\n                        : \"\"}\n                    </span>\n                  </Form.Group>\n                </div>\n                <div className=\"col-lg-4 col-md-6 col-12\">\n                  <Form.Group className=\"mb-3\">\n                    <Form.Label>\n                      Designation <span className=\"text-danger\">*</span>\n                    </Form.Label>\n                    <Form.Select\n                      aria-label=\"Default select example\"\n                      defaultValue={\n                        data.singledata.length > 0\n                          ? data.singledata[0].designation._id\n                          : \"\"\n                      }\n                      onKeyUp={handelSelectDesingnation}\n                      onClick={handelSelectDesingnation}\n                      ref={degRef}\n                      className=\"form-control\"\n                      required\n                    >\n                      <option key={\"option-none\"} value={\"\"}>\n                        Select\n                      </option>\n                      {data.alldesignation.length > 0\n                        ? data.alldesignation.map((result, ind) => {\n                            let { name, departments } = result;\n                            return (\n                              <Fragment key={ind}>\n                                {departments.length > 0\n                                  ? departments.map((result1, index1) => {\n                                      let { designation } = result1;\n                                      return (\n                                        <optgroup\n                                          key={`opt-${index1}`}\n                                          label={\n                                            result1.name + \"(\" + name + \")\"\n                                          }\n                                        >\n                                          {designation.length > 0\n                                            ? designation.map(\n                                                (result3, index) => (\n                                                  <option\n                                                    key={`option-${index}`}\n                                                    value={result3._id}\n                                                  >\n                                                    {result3.name}\n                                                  </option>\n                                                )\n                                              )\n                                            : \"\"}\n                                        </optgroup>\n                                      );\n                                    })\n                                  : \"\"}\n                              </Fragment>\n                            );\n                          })\n                        : \"\"}\n                    </Form.Select>\n                    <span className=\"text-danger\">\n                      {data.errors.length > 0\n                        ? data.errors.map((err) =>\n                            err.param === \"designation\" ? (\n                              <TitleCase\n                                key={\"err\" + err.param}\n                                text={err.msg}\n                              />\n                            ) : (\n                              \"\"\n                            )\n                          )\n                        : \"\"}\n                    </span>\n                  </Form.Group>\n                </div>\n                <div className=\"col-lg-4 col-md-6 col-12\">\n                  <Form.Group className=\"\" controlId=\"formBasicEmail\">\n                    <Form.Label>\n                      Joining Date <span className=\"text-danger\">*</span>\n                    </Form.Label>\n                    <Form.Control\n                      type=\"date\"\n                      ref={joiningRef}\n                      defaultValue={\n                        data.singledata.length > 0\n                          ? data.singledata[0].date_of_joining.substring(0, 10)\n                          : \"\"\n                      }\n                      placeholder=\"Joining date\"\n                      required\n                    />\n                    <span className=\"text-danger\">\n                      {data.errors.length > 0\n                        ? data.errors.map((err) =>\n                            err.param === \"date_of_joining\" ? (\n                              <TitleCase\n                                key={\"err\" + err.param}\n                                text={err.msg}\n                              />\n                            ) : (\n                              \"\"\n                            )\n                          )\n                        : \"\"}\n                    </span>\n                  </Form.Group>\n                </div>\n                <div className=\"col-lg-4 col-md-6 col-12\">\n                  <Form.Group className=\"mt-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>\n                      Basic salary\n                      {salary.max\n                        ? \" ( \" + salary.min + \" to \" + salary.max + \" )\"\n                        : \"\"}{\" \"}\n                      <span className=\"text-danger\">*</span>\n                    </Form.Label>\n                    <Form.Control\n                      type=\"number\"\n                      nmae=\"basicSalary\"\n                      ref={basicSalaryRef}\n                      defaultValue={\n                        data.singledata.length > 0\n                          ? data.singledata[0].salary\n                          : \"\"\n                      }\n                      min={0}\n                      placeholder=\"Basic Salary\"\n                      required\n                    />\n                    <span className=\"text-danger\">\n                      {data.errors.length > 0\n                        ? data.errors.map((err) =>\n                            err.param === \"salary\" ? (\n                              <TitleCase\n                                key={\"err\" + err.param}\n                                text={err.msg}\n                              />\n                            ) : (\n                              \"\"\n                            )\n                          )\n                        : \"\"}\n                    </span>\n                  </Form.Group>\n                </div>\n\n                <div className=\"d-flex align-items-center justify-content-between\">\n                  <Form.Group controlId=\"formFile\" className=\"mt-3\">\n                    <Form.Label>\n                      Image{\" \"}\n                      <span className=\"text-danger\">\n                        *(only .jpg, .jpeg, .png)\n                      </span>\n                    </Form.Label>\n                    <Form.Control\n                      ref={imageRef}\n                      onChange={onSelectFile}\n                      type=\"file\"\n                      accept=\".jpg,.jpeg,.png\"\n                    />\n                    <span className=\"text-danger\">\n                      {data.errors.length > 0\n                        ? data.errors.map((err) =>\n                            err.param === \"image\" ? (\n                              <TitleCase\n                                key={\"err\" + err.param}\n                                text={err.msg}\n                              />\n                            ) : (\n                              \"\"\n                            )\n                          )\n                        : \"\"}\n                    </span>\n                  </Form.Group>\n                  <div className=\"img-part ms-3 my-3\">\n                    <img\n                      src={\n                        selectedFile\n                          ? preview\n                          : data.singledata.length > 0\n                          ? data.singledata[0].image_link\n                          : Verdi\n                      }\n                      alt=\"Preview\"\n                    />\n                  </div>\n                </div>\n                <div className=\"radio-btns mt-0\">\n                  {[\"checkbox\"].map((type) => (\n                    <div key={`default-${type}`} className=\"mb-3\">\n                      <Form.Check\n                        type={type}\n                        defaultChecked={\n                          data.singledata.length > 0\n                            ? data.singledata[0].salary_slip\n                            : false\n                        }\n                        onChange={checkvalue}\n                        label=\"Salary Slip\"\n                      />\n                    </div>\n                  ))}\n                </div>\n                {isEdit && (\n                  <div className=\"radio-btns mt-0\">\n                    {[\"checkbox\"].map((type) => (\n                      <div key={`default-${type}`} className=\"mb-3\">\n                        <Form.Check\n                          type={type}\n                          onChange={checkSendEmailOrNot}\n                          label=\"Send password \"\n                        />\n                      </div>\n                    ))}\n                  </div>\n                )}\n                <div className=\"col-12\">\n                  {data.isSubmitting ? (\n                    <Button variant=\"primary\" className=\"me-3\">\n                      <Spinner\n                        as=\"span\"\n                        animation=\"grow\"\n                        size=\"sm\"\n                        role=\"status\"\n                        aria-hidden=\"true\"\n                      />\n                      &#10240;{isEdit ? \"Update\" : \"Save\"}\n                    </Button>\n                  ) : (\n                    <Button variant=\"primary\" className=\"me-3\" type=\"submit\">\n                      {isEdit ? \"Update\" : \"Save\"}\n                    </Button>\n                  )}\n                </div>\n              </div>\n            </Form>\n          </Modal.Body>\n        </Modal>\n        <Modal show={showMac} onHide={()=>setShowMac(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Clear</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Do you really want to Clear Mac Address?</Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant=\"success\"\n              onClick={() => {\n                handlecleanMac();\n              }}\n            >\n              Yes\n            </Button>\n            <Button variant=\"primary\" onClick={()=>setShowMac(false)}>\n              No\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  return (\n    <>\n      <div className=\"page-section p-4\">\n        <div className=\"employees chart\">\n          <div className=\"d-flex justify-content-between\">\n            <button onClick={() => setView(!view)} className=\"btn btn-success\">\n              Back to Home\n            </button>\n            {!is_deleted && (\n              <Button\n                variant=\"danger\"\n                className=\"ms-3\"\n                onClick={() => {\n                  setShowDelete(true);\n                }}\n              >\n                Delete\n              </Button>\n            )}\n          </div>\n          <EmployeeDetails\n            jwt={jwt}\n            id={id}\n            notify={notify}\n            is_deleted={is_deleted}\n          />\n        </div>\n        <Modal show={showDelete} onHide={handleDeleteClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Delete</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Do you really want to delete?</Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant=\"danger\"\n              onClick={() => {\n                handleDeleteClose();\n                handeldelete();\n              }}\n            >\n              Yes\n            </Button>\n            <Button variant=\"primary\" onClick={handleDeleteClose}>\n              No\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    </>\n  );\n}\nexport default Employees;\n","import { useState } from \"react\";\n\nfunction ReadMoreReadLess(props) {\n    const text = props.text\n    const limit = props.limit\n    const [readMore, setReadMore] = useState(false)\n    const toggle = ()=>{\n        return setReadMore(!readMore);\n    }\n    return ( <>{text?<>\n        {!readMore? text.substr(0,props.limit):text}\n        {text.length>limit&&<button onClick={toggle}>{!readMore?\"...Read More\":\"...Read Less\"}</button>}\n    </>:<></>\n    }\n    </> );\n}\n\nexport default ReadMoreReadLess;","function CalculationLate( result ) {\n\n    return ( \n        result.late !== \"ONTIME\"\n          ? Number(result.late.slice(3,5))<=15 && Number(result.late.slice(0,2))<1?<span className=\"bg-warning text-white late-area\">{result.late}</span>:<span className=\"bg-danger text-white late-area\">{result.late}</span>\n          : <span className=\"bg-success text-white late-area\">On&#10240;Time</span>\n        );\n}\n\nfunction CalculateEarlyLeave(result){\n  const {outTime, checkOut} = result\n  const date = new Date(outTime)\n  const houre = parseInt(date.getHours().toString().padStart(2, '0'))\n  const min = parseInt(date.getMinutes().toString().padStart(2, '0'))\n\n  let data;\n  if(checkOut){\n    let date1 = new Date(checkOut)\n    let h = parseInt(date1.getHours().toString().padStart(2, '0'))\n    let m = parseInt(date1.getMinutes().toString().padStart(2, '0'))\n    if(houre===h){\n      if(min<=m){\n        data = <span className=\"bg-success text-white late-area\">On&#10240;Time</span>\n      }else{\n        data = <span className=\"bg-danger text-white late-area\">00:{(min-m).toString().padStart(2, '0')}</span>\n      }\n    }else{\n      //console.log(checkOut, outTime)\n      if(houre>h){\n        let diff_time = (houre*60+min)-(h*60+m)\n        data = <span className=\"bg-danger text-white late-area\">{(Math.floor(diff_time/60)).toString().padStart(2, '0')}:{(diff_time%60).toString().padStart(2, '0')}</span>\n      }else{\n        data = <span className=\"bg-success text-white late-area\">On&#10240;Time</span>\n      }\n\n    }\n  }\n  return data\n}\n\nexport {CalculateEarlyLeave}\nexport default CalculationLate;"],"names":["props","dispatch","useDispatch","jwt","id","notify","is_deleted","isEdit","setIsEdit","useState","panEdit","setPanEdit","adharEdit","setAdharEdit","show","setShow","emailShow","setEmailShow","selectedFile","setSelectedFile","preview","setPreview","ifscRef","useRef","bankNameRef","branchNameRef","fileRef","accountNoRef","accountHolderRef","panRef","panNumberRef","adharRef","adharNumberRef","emailRef","data","useSelector","status","employeeDetails","useEffect","getAll","handleShow","isedit","arguments","length","undefined","objectUrl","URL","createObjectURL","revokeObjectURL","isLoading","_jsx","Loader","_Fragment","children","_jsxs","className","src","image_link","Verdi","alt","TitleCase","text","name","designation","ReadMoreReadLess","description","limit","Tabs","defaultActiveKey","Tab","eventKey","title","company_email","Button","onClick","gender","mobile_no","Modal","onHide","size","Header","closeButton","Title","Body","Form","onSubmit","async","e","preventDefault","current","value","setIsSubmitting","addEmail","email","Group","Label","Control","type","ref","defaultValue","accountDetails","placeholder","required","variant","current_address","address","state","country","pincode","parmanent_address","account_no","accHolder_name","bank_name","branch_name","ifsc_code","handleClose","files","updateRecord","_id","oldFilePath","file_path","trim","oldFileLink","file_link","userid","accountHolder","accountNo","branchName","bankName","ifscCode","file","addRecord","onKeyUp","key","handelNumberValue","controlId","onChange","target","accept","isSubmitting","Spinner","as","animation","role","panCard_link","CiEdit","addDocumnets","old_pan_path","panCard_path","old_pan_link","pan","pan_number","ispan","panCard_no","aadharCard_link","href","rel","old_adhar_path","aadharCard_path","old_adhar_link","adhar","adhar_number","aadharCard_no","Table","striped","bordered","hover","colSpan","attendanceDetails","map","result","index","LocaDateFormate","date_arg","created_at","timeSlot","shift","LocalTimeZone","time","inTime","outTime","CalculationLate","late","CalculateEarlyLeave","checkOut","time_out","effective_hours","concat","duration","salaryDetails","month","salary","amount","salary_slip","leaveDetail","reason","start_date","slice","end_date","Date","getTime","firstNameRef","lastNameRef","setMobile_no","alter_mobile_no","setAlter_mobile_no","genderRef","addressRef","stateRef","countryRef","pinCodeRef","paddressRef","pstateRef","pcountryRef","ppinCodeRef","shiftRef","joiningRef","basicSalaryRef","degRef","imageRef","serchingKeyRef","filterRef","setSalary","min","max","deletedTab","setDeletedTab","slip","setSlip","isEmailSent","setIsEmailSent","showDelete","setShowDelete","showMac","setShowMac","setId","setIs_Deleted","setFile","image","employees","singledata","alternate_mobile_no","isError","unsetSingleData","handelserching","debounce","searchKey","serchingData","items","number","pagination_AllData","totalpages","push","Pagination","Item","active","currentpage","handelPagination","items1","pagination_Deleted_AllData","isSearch","pageno","isfilter","getAllByDepartment","filter","handleDeleteClose","isedite","getOne","handelSelectDesingnation","alldesignation","forEach","departments","result2","result1","max_salary","min_salary","checkAddresh","checked","checkvalue","checkSendEmailOrNot","view","setView","handelview","isDelete","isFirstLoading","EmployeeDetails","Footer","deleteRecord","allData","Number","CSVLink","prod","Gender","Email","department","filename","now","toLocaleDateString","Select","headAllData","label","index1","InputGroup","onSelect","handelshorting","param","x","sorting_on","sort","field","IoIosArrowRoundUp","style","color","position","right","IoIosArrowRoundDown","user_head","console","log","handlemacShow","image_path","responsive","deleted_allData","restoreRecord","contentClassName","filePath","docRef","storage","getDownloadURL","oldimage_path","oldimage_link","mobile","alternetMobile","date_of_joining","is_send","error","total","split","join","errors","err","msg","rows","JSON","parse","Check","PhoneInput","international","defaultCountry","countries","allShiftData","ind","Fragment","result3","substring","nmae","defaultChecked","clearMacAddress","readMore","setReadMore","substr","toggle","date","houre","parseInt","getHours","toString","padStart","getMinutes","date1","h","m","diff_time","Math","floor"],"sourceRoot":""}